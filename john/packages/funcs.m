(* ::Package:: *)

(* a2 *)

a2PM[x1_,x2_]:=(3 ppm[184]+ppm[187]+2 ppm[201]-ppm[324]/2) tensor[x1,x1,x1,1+x1]+2 ppm[209] tensor[x1,x1,x1,x2]+(-((3 ppm[184])/2)-ppm[187]/2-ppm[201]-ppm[209]+ppm[324]/4) tensor[x1,x1,x1,1+x1+x1 x2]+(ppm[184]-ppm[187]+2 ppm[209]-ppm[324]/2) tensor[x1,x1,1+x1,x1]+(-2 ppm[184]-ppm[201]-ppm[209]+ppm[324]/2) tensor[x1,x1,1+x1,1+x1]+(ppm[184]/2-ppm[187]/2+ppm[209]-ppm[324]/4) tensor[x1,x1,1+x1,x2]+((3 ppm[184])/2+ppm[187]/2+ppm[201]-ppm[324]/4) tensor[x1,x1,1+x1,1+x1+x1 x2]+2 ppm[209] tensor[x1,x1,x2,x1]+((3 ppm[184])/2+ppm[187]/2+ppm[201]-ppm[324]/4) tensor[x1,x1,x2,1+x1]+2 ppm[209] tensor[x1,x1,x2,1+x2]+(-((3 ppm[184])/2)-ppm[187]/2-ppm[209]+ppm[324]/4) tensor[x1,x1,x2,1+x1+x1 x2]+2 ppm[209] tensor[x1,x1,1+x2,x2]-ppm[209] tensor[x1,x1,1+x2,1+x1+x1 x2]+(-(ppm[184]/2)+ppm[187]/2-2 ppm[209]+ppm[324]/4) tensor[x1,x1,1+x1+x1 x2,x1]+(ppm[184]/2-ppm[187]/2+ppm[209]-ppm[324]/4) tensor[x1,x1,1+x1+x1 x2,1+x1]+(-(ppm[184]/2)+ppm[187]/2+ppm[201]-2 ppm[209]+ppm[324]/4) tensor[x1,x1,1+x1+x1 x2,x2]-ppm[209] tensor[x1,x1,1+x1+x1 x2,1+x2]+(-ppm[201]+ppm[209]) tensor[x1,x1,1+x1+x1 x2,1+x1+x1 x2]+(-ppm[184]-ppm[187]+2 ppm[209]+ppm[324]/2) tensor[x1,1+x1,x1,x1]+(-ppm[184]-ppm[201]-ppm[209]) tensor[x1,1+x1,x1,1+x1]+(-(ppm[184]/2)-ppm[187]/2+ppm[209]+ppm[324]/4) tensor[x1,1+x1,x1,x2]+(ppm[184]+ppm[209]) tensor[x1,1+x1,x1,1+x1+x1 x2]+(ppm[187]-2 ppm[209]) tensor[x1,1+x1,1+x1,x1]+ppm[209] tensor[x1,1+x1,1+x1,1+x1]+ppm[184] tensor[x1,1+x1,1+x1,x2]+(-ppm[184]-ppm[209]) tensor[x1,1+x1,1+x1,1+x1+x1 x2]+(-(ppm[184]/2)-ppm[187]/2+ppm[209]+ppm[324]/4) tensor[x1,1+x1,x2,x1]+(ppm[184]/2-ppm[187]/2+ppm[201]-ppm[209]-ppm[324]/4) tensor[x1,1+x1,x2,1+x1]+(ppm[184]/2+ppm[187]/2-ppm[209]-ppm[324]/4) tensor[x1,1+x1,x2,x2]+(ppm[201]-ppm[209]) tensor[x1,1+x1,x2,1+x2]+(-ppm[184]-ppm[201]+2 ppm[209]+ppm[324]/2) tensor[x1,1+x1,x2,1+x1+x1 x2]+(ppm[184]/2-ppm[187]/2+ppm[209]-ppm[324]/4) tensor[x1,1+x1,1+x1+x1 x2,x1]+(-(ppm[184]/2)+ppm[187]/2-ppm[201]+ppm[324]/4) tensor[x1,1+x1,1+x1+x1 x2,1+x1]+(-((3 ppm[184])/2)-ppm[187]/2+ppm[209]+ppm[324]/4) tensor[x1,1+x1,1+x1+x1 x2,x2]+(-ppm[201]+ppm[209]) tensor[x1,1+x1,1+x1+x1 x2,1+x2]+(2 ppm[184]+ppm[201]-ppm[209]-ppm[324]/2) tensor[x1,1+x1,1+x1+x1 x2,1+x1+x1 x2]+2 ppm[209] tensor[x1,x2,x1,x1]+((3 ppm[184])/2+ppm[187]/2+ppm[201]-ppm[324]/4) tensor[x1,x2,x1,1+x1]+2 ppm[209] tensor[x1,x2,x1,1+x2]+(-((3 ppm[184])/2)-ppm[187]/2-ppm[209]+ppm[324]/4) tensor[x1,x2,x1,1+x1+x1 x2]+(ppm[184]/2-ppm[187]/2+ppm[209]-ppm[324]/4) tensor[x1,x2,1+x1,x1]+(-(ppm[184]/2)+ppm[187]/2-ppm[209]+ppm[324]/4) tensor[x1,x2,1+x1,x2]+(ppm[184]/2-ppm[187]/2+ppm[209]-ppm[324]/4) tensor[x1,x2,1+x1,1+x1+x1 x2]+(-((3 ppm[184])/2)-ppm[187]/2-ppm[201]+ppm[324]/4) tensor[x1,x2,x2,1+x1]-2 ppm[209] tensor[x1,x2,x2,x2]+(-ppm[201]+ppm[209]) tensor[x1,x2,x2,1+x2]+((3 ppm[184])/2+ppm[187]/2+ppm[201]-ppm[324]/4) tensor[x1,x2,x2,1+x1+x1 x2]+2 ppm[209] tensor[x1,x2,1+x2,x1]+2 ppm[209] tensor[x1,x2,1+x2,1+x2]+(-ppm[184]-ppm[187]) tensor[x1,x2,1+x2,1+x1+x1 x2]+(-(ppm[184]/2)+ppm[187]/2-ppm[209]+ppm[324]/4) tensor[x1,x2,1+x1+x1 x2,x1]+((3 ppm[184])/2+ppm[187]/2+ppm[201]-ppm[324]/4) tensor[x1,x2,1+x1+x1 x2,1+x1]+(ppm[184]/2-ppm[187]/2+ppm[209]-ppm[324]/4) tensor[x1,x2,1+x1+x1 x2,x2]+(ppm[184]+ppm[187]+ppm[201]-ppm[209]) tensor[x1,x2,1+x1+x1 x2,1+x2]+(-2 ppm[184]-ppm[201]-ppm[209]+ppm[324]/2) tensor[x1,x2,1+x1+x1 x2,1+x1+x1 x2]+2 ppm[209] tensor[x1,1+x2,x1,x2]-ppm[209] tensor[x1,1+x2,x1,1+x1+x1 x2]+2 ppm[209] tensor[x1,1+x2,x2,x1]+(ppm[201]-ppm[209]) tensor[x1,1+x2,x2,1+x1]+(-ppm[201]+ppm[209]) tensor[x1,1+x2,x2,x2]+2 ppm[201] tensor[x1,1+x2,x2,1+x2]+(-2 ppm[184]+ppm[324]/2) tensor[x1,1+x2,x2,1+x1+x1 x2]+2 ppm[209] tensor[x1,1+x2,1+x2,x2]-ppm[209] tensor[x1,1+x2,1+x2,1+x1+x1 x2]-ppm[209] tensor[x1,1+x2,1+x1+x1 x2,x1]+(-ppm[201]+ppm[209]) tensor[x1,1+x2,1+x1+x1 x2,1+x1]+(-2 ppm[184]+ppm[201]-ppm[209]+ppm[324]/2) tensor[x1,1+x2,1+x1+x1 x2,x2]-ppm[201] tensor[x1,1+x2,1+x1+x1 x2,1+x2]+(2 ppm[184]-ppm[324]/2) tensor[x1,1+x2,1+x1+x1 x2,1+x1+x1 x2]+(ppm[184]/2+ppm[187]/2-2 ppm[209]-ppm[324]/4) tensor[x1,1+x1+x1 x2,x1,x1]+ppm[209] tensor[x1,1+x1+x1 x2,x1,1+x1]+(ppm[184]/2+ppm[187]/2-ppm[209]-ppm[324]/4) tensor[x1,1+x1+x1 x2,x1,x2]-ppm[209] tensor[x1,1+x1+x1 x2,x1,1+x2]+(-(ppm[184]/2)-ppm[187]/2+ppm[209]+ppm[324]/4) tensor[x1,1+x1+x1 x2,1+x1,x1]-ppm[209] tensor[x1,1+x1+x1 x2,1+x1,1+x1]+(-(ppm[184]/2)-ppm[187]/2+ppm[209]-ppm[324]/4) tensor[x1,1+x1+x1 x2,1+x1,x2]+(ppm[184]/2+ppm[187]/2+ppm[324]/4) tensor[x1,1+x1+x1 x2,1+x1,1+x1+x1 x2]+(ppm[184]/2+ppm[187]/2-ppm[209]-ppm[324]/4) tensor[x1,1+x1+x1 x2,x2,x1]+(ppm[184]+ppm[187]+ppm[209]) tensor[x1,1+x1+x1 x2,x2,1+x1]+(-(ppm[184]/2)-ppm[187]/2+ppm[209]+ppm[324]/4) tensor[x1,1+x1+x1 x2,x2,x2]+(ppm[184]+ppm[187]) tensor[x1,1+x1+x1 x2,x2,1+x2]+(-(ppm[184]/2)-ppm[187]/2-2 ppm[209]-ppm[324]/4) tensor[x1,1+x1+x1 x2,x2,1+x1+x1 x2]-ppm[209] tensor[x1,1+x1+x1 x2,1+x2,x1]-1/2 ppm[324] tensor[x1,1+x1+x1 x2,1+x2,x2]-ppm[209] tensor[x1,1+x1+x1 x2,1+x2,1+x2]+(ppm[184]/2+ppm[187]/2+ppm[324]/4) tensor[x1,1+x1+x1 x2,1+x2,1+x1+x1 x2]+(-ppm[184]-ppm[187]) tensor[x1,1+x1+x1 x2,1+x1+x1 x2,1+x1]+(ppm[184]+ppm[187]-2 ppm[209]) tensor[x1,1+x1+x1 x2,1+x1+x1 x2,x2]+(-ppm[184]-ppm[187]) tensor[x1,1+x1+x1 x2,1+x1+x1 x2,1+x2]+2 ppm[209] tensor[x1,1+x1+x1 x2,1+x1+x1 x2,1+x1+x1 x2]+(-3 ppm[184]+ppm[187]+2 ppm[201]+ppm[324]/2) tensor[1+x1,x1,x1,x1]+(-ppm[187]-2 ppm[201]) tensor[1+x1,x1,x1,1+x1]+(-((3 ppm[184])/2)+ppm[187]/2+ppm[201]+ppm[324]/4) tensor[1+x1,x1,x1,x2]+(ppm[184]/2+ppm[187]/2+ppm[209]-ppm[324]/4) tensor[1+x1,x1,x1,1+x1+x1 x2]+(ppm[184]-ppm[201]-ppm[209]) tensor[1+x1,x1,1+x1,x1]+ppm[201] tensor[1+x1,x1,1+x1,1+x1]+(ppm[184]/2+ppm[187]/2-ppm[201]+ppm[209]-ppm[324]/4) tensor[1+x1,x1,1+x1,x2]+(-(ppm[184]/2)-ppm[187]/2-ppm[209]+ppm[324]/4) tensor[1+x1,x1,1+x1,1+x1+x1 x2]+(-((3 ppm[184])/2)+ppm[187]/2+ppm[201]+ppm[324]/4) tensor[1+x1,x1,x2,x1]+((3 ppm[184])/2-ppm[187]/2-ppm[201]-ppm[324]/4) tensor[1+x1,x1,x2,x2]+(ppm[201]-ppm[209]) tensor[1+x1,x1,x2,1+x2]+(-((3 ppm[184])/2)+ppm[187]/2+ppm[209]+ppm[324]/4) tensor[1+x1,x1,x2,1+x1+x1 x2]+ppm[209] tensor[1+x1,x1,1+x1+x1 x2,x1]-ppm[201] tensor[1+x1,x1,1+x1+x1 x2,1+x1]+(-2 ppm[184]+ppm[201]+ppm[324]/2) tensor[1+x1,x1,1+x1+x1 x2,x2]+(-ppm[201]+ppm[209]) tensor[1+x1,x1,1+x1+x1 x2,1+x2]+(2 ppm[184]-ppm[324]/2) tensor[1+x1,x1,1+x1+x1 x2,1+x1+x1 x2]+(2 ppm[184]-ppm[201]-ppm[209]-ppm[324]/2) tensor[1+x1,1+x1,x1,x1]+ppm[201] tensor[1+x1,1+x1,x1,1+x1]-ppm[209] tensor[1+x1,1+x1,x1,1+x1+x1 x2]+ppm[209] tensor[1+x1,1+x1,1+x1,x1]-ppm[209] tensor[1+x1,1+x1,1+x1,x2]+ppm[209] tensor[1+x1,1+x1,1+x1,1+x1+x1 x2]-ppm[201] tensor[1+x1,1+x1,x2,1+x1]+(-2 ppm[184]+ppm[201]+ppm[209]+ppm[324]/2) tensor[1+x1,1+x1,x2,x2]+(-ppm[201]+ppm[209]) tensor[1+x1,1+x1,x2,1+x2]+(2 ppm[184]-ppm[209]-ppm[324]/2) tensor[1+x1,1+x1,x2,1+x1+x1 x2]-ppm[209] tensor[1+x1,1+x1,1+x1+x1 x2,x1]+ppm[201] tensor[1+x1,1+x1,1+x1+x1 x2,1+x1]+(2 ppm[184]-ppm[201]-ppm[324]/2) tensor[1+x1,1+x1,1+x1+x1 x2,x2]+(ppm[201]-ppm[209]) tensor[1+x1,1+x1,1+x1+x1 x2,1+x2]+(-2 ppm[184]+ppm[324]/2) tensor[1+x1,1+x1,1+x1+x1 x2,1+x1+x1 x2]+(-((3 ppm[184])/2)+ppm[187]/2+ppm[201]+ppm[324]/4) tensor[1+x1,x2,x1,x1]+((3 ppm[184])/2-ppm[187]/2-ppm[201]-ppm[324]/4) tensor[1+x1,x2,x1,x2]+(ppm[201]-ppm[209]) tensor[1+x1,x2,x1,1+x2]+(-((3 ppm[184])/2)+ppm[187]/2+ppm[209]+ppm[324]/4) tensor[1+x1,x2,x1,1+x1+x1 x2]+(-(ppm[184]/2)-ppm[187]/2+ppm[201]-ppm[209]+ppm[324]/4) tensor[1+x1,x2,1+x1,x1]-ppm[201] tensor[1+x1,x2,1+x1,1+x1]+(-ppm[184]+ppm[201]+ppm[209]) tensor[1+x1,x2,1+x1,x2]+(ppm[184]-ppm[209]) tensor[1+x1,x2,1+x1,1+x1+x1 x2]+((3 ppm[184])/2-ppm[187]/2-ppm[201]-ppm[324]/4) tensor[1+x1,x2,x2,x1]+(ppm[187]+2 ppm[201]) tensor[1+x1,x2,x2,1+x1]+(3 ppm[184]-ppm[187]-2 ppm[201]-ppm[324]/2) tensor[1+x1,x2,x2,x2]+(ppm[184]+ppm[201]-ppm[209]) tensor[1+x1,x2,x2,1+x2]+(-3 ppm[184]+ppm[324]/2) tensor[1+x1,x2,x2,1+x1+x1 x2]+(ppm[201]-ppm[209]) tensor[1+x1,x2,1+x2,x1]+(ppm[184]/2-ppm[187]/2-ppm[324]/4) tensor[1+x1,x2,1+x2,x2]+(ppm[201]-ppm[209]) tensor[1+x1,x2,1+x2,1+x2]+(-(ppm[184]/2)+ppm[187]/2+ppm[324]/4) tensor[1+x1,x2,1+x2,1+x1+x1 x2]+(-ppm[184]+ppm[187]+ppm[209]) tensor[1+x1,x2,1+x1+x1 x2,x1]+(-ppm[187]-ppm[201]) tensor[1+x1,x2,1+x1+x1 x2,1+x1]+(-2 ppm[184]+ppm[187]+ppm[201]-ppm[209]+ppm[324]/2) tensor[1+x1,x2,1+x1+x1 x2,x2]+(-ppm[184]-ppm[201]+ppm[209]) tensor[1+x1,x2,1+x1+x1 x2,1+x2]+(2 ppm[184]+ppm[209]-ppm[324]/2) tensor[1+x1,x2,1+x1+x1 x2,1+x1+x1 x2]+(-(ppm[184]/2)-ppm[187]/2+ppm[209]+ppm[324]/4) tensor[1+x1,1+x1+x1 x2,x1,x1]-ppm[201] tensor[1+x1,1+x1+x1 x2,x1,1+x1]+(-((3 ppm[184])/2)+ppm[187]/2+ppm[201]+ppm[324]/4) tensor[1+x1,1+x1+x1 x2,x1,x2]+(-ppm[201]+ppm[209]) tensor[1+x1,1+x1+x1 x2,x1,1+x2]+((3 ppm[184])/2-ppm[187]/2-ppm[324]/4) tensor[1+x1,1+x1+x1 x2,x1,1+x1+x1 x2]+(ppm[184]/2+ppm[187]/2-ppm[201]-ppm[324]/4) tensor[1+x1,1+x1+x1 x2,1+x1,x1]+ppm[201] tensor[1+x1,1+x1+x1 x2,1+x1,1+x1]+(ppm[184]-ppm[201]) tensor[1+x1,1+x1+x1 x2,1+x1,x2]-ppm[184] tensor[1+x1,1+x1+x1 x2,1+x1,1+x1+x1 x2]+(-((3 ppm[184])/2)+ppm[187]/2+ppm[201]+ppm[324]/4) tensor[1+x1,1+x1+x1 x2,x2,x1]+(-ppm[187]-ppm[201]) tensor[1+x1,1+x1+x1 x2,x2,1+x1]+(-ppm[184]+ppm[187]+ppm[201]-ppm[209]) tensor[1+x1,1+x1+x1 x2,x2,x2]-ppm[184] tensor[1+x1,1+x1+x1 x2,x2,1+x2]+(ppm[184]+ppm[209]) tensor[1+x1,1+x1+x1 x2,x2,1+x1+x1 x2]+(-ppm[201]+ppm[209]) tensor[1+x1,1+x1+x1 x2,1+x2,x1]+(-(ppm[184]/2)+ppm[187]/2+ppm[324]/4) tensor[1+x1,1+x1+x1 x2,1+x2,x2]+(-ppm[201]+ppm[209]) tensor[1+x1,1+x1+x1 x2,1+x2,1+x2]+(ppm[184]/2-ppm[187]/2-ppm[324]/4) tensor[1+x1,1+x1+x1 x2,1+x2,1+x1+x1 x2]+(ppm[184]-ppm[187]) tensor[1+x1,1+x1+x1 x2,1+x1+x1 x2,x1]+ppm[187] tensor[1+x1,1+x1+x1 x2,1+x1+x1 x2,1+x1]+(-ppm[187]+ppm[209]) tensor[1+x1,1+x1+x1 x2,1+x1+x1 x2,x2]+ppm[184] tensor[1+x1,1+x1+x1 x2,1+x1+x1 x2,1+x2]-ppm[209] tensor[1+x1,1+x1+x1 x2,1+x1+x1 x2,1+x1+x1 x2]+2 ppm[209] tensor[x2,x1,x1,x1]+((3 ppm[184])/2+ppm[187]/2+ppm[201]-ppm[324]/4) tensor[x2,x1,x1,1+x1]+2 ppm[209] tensor[x2,x1,x1,1+x2]+(-((3 ppm[184])/2)-ppm[187]/2-ppm[209]+ppm[324]/4) tensor[x2,x1,x1,1+x1+x1 x2]+(ppm[184]/2-ppm[187]/2+ppm[209]-ppm[324]/4) tensor[x2,x1,1+x1,x1]+(-(ppm[184]/2)+ppm[187]/2-ppm[209]+ppm[324]/4) tensor[x2,x1,1+x1,x2]+(ppm[184]/2-ppm[187]/2+ppm[209]-ppm[324]/4) tensor[x2,x1,1+x1,1+x1+x1 x2]+(-((3 ppm[184])/2)-ppm[187]/2-ppm[201]+ppm[324]/4) tensor[x2,x1,x2,1+x1]-2 ppm[209] tensor[x2,x1,x2,x2]+(-ppm[201]+ppm[209]) tensor[x2,x1,x2,1+x2]+((3 ppm[184])/2+ppm[187]/2+ppm[201]-ppm[324]/4) tensor[x2,x1,x2,1+x1+x1 x2]+2 ppm[209] tensor[x2,x1,1+x2,x1]+2 ppm[209] tensor[x2,x1,1+x2,1+x2]+(-ppm[184]-ppm[187]) tensor[x2,x1,1+x2,1+x1+x1 x2]+(-(ppm[184]/2)+ppm[187]/2-ppm[209]+ppm[324]/4) tensor[x2,x1,1+x1+x1 x2,x1]+((3 ppm[184])/2+ppm[187]/2+ppm[201]-ppm[324]/4) tensor[x2,x1,1+x1+x1 x2,1+x1]+(ppm[184]/2-ppm[187]/2+ppm[209]-ppm[324]/4) tensor[x2,x1,1+x1+x1 x2,x2]+(ppm[184]+ppm[187]+ppm[201]-ppm[209]) tensor[x2,x1,1+x1+x1 x2,1+x2]+(-2 ppm[184]-ppm[201]-ppm[209]+ppm[324]/2) tensor[x2,x1,1+x1+x1 x2,1+x1+x1 x2]+(-(ppm[184]/2)-ppm[187]/2+ppm[209]+ppm[324]/4) tensor[x2,1+x1,x1,x1]+(-(ppm[184]/2)+ppm[187]/2-ppm[201]+ppm[209]+ppm[324]/4) tensor[x2,1+x1,x1,1+x1]+(ppm[184]/2+ppm[187]/2-ppm[209]-ppm[324]/4) tensor[x2,1+x1,x1,x2]+(-ppm[187]+ppm[209]) tensor[x2,1+x1,x1,1+x1+x1 x2]-ppm[184] tensor[x2,1+x1,1+x1,x1]-ppm[209] tensor[x2,1+x1,1+x1,1+x1]+(-ppm[187]+2 ppm[209]) tensor[x2,1+x1,1+x1,x2]+(ppm[187]-ppm[209]) tensor[x2,1+x1,1+x1,1+x1+x1 x2]+(ppm[184]/2+ppm[187]/2-ppm[209]-ppm[324]/4) tensor[x2,1+x1,x2,x1]+(ppm[184]+ppm[201]+ppm[209]) tensor[x2,1+x1,x2,1+x1]+(ppm[184]+ppm[187]-2 ppm[209]-ppm[324]/2) tensor[x2,1+x1,x2,x2]+(ppm[184]/2+ppm[187]/2+ppm[201]-ppm[209]-ppm[324]/4) tensor[x2,1+x1,x2,1+x2]+(-2 ppm[184]-ppm[187]-ppm[201]+ppm[209]+ppm[324]/2) tensor[x2,1+x1,x2,1+x1+x1 x2]+(ppm[184]/2-ppm[187]/2+ppm[209]+ppm[324]/4) tensor[x2,1+x1,1+x1+x1 x2,x1]+(-ppm[184]-ppm[201]) tensor[x2,1+x1,1+x1+x1 x2,1+x1]+(-ppm[184]+ppm[324]/2) tensor[x2,1+x1,1+x1+x1 x2,x2]+(-(ppm[184]/2)-ppm[187]/2-ppm[201]+ppm[209]+ppm[324]/4) tensor[x2,1+x1,1+x1+x1 x2,1+x2]+(2 ppm[184]+ppm[201]-ppm[324]/2) tensor[x2,1+x1,1+x1+x1 x2,1+x1+x1 x2]+(-((3 ppm[184])/2)-ppm[187]/2-ppm[201]+ppm[324]/4) tensor[x2,x2,x1,1+x1]-2 ppm[209] tensor[x2,x2,x1,x2]+(-ppm[201]+ppm[209]) tensor[x2,x2,x1,1+x2]+((3 ppm[184])/2+ppm[187]/2+ppm[201]-ppm[324]/4) tensor[x2,x2,x1,1+x1+x1 x2]+(-(ppm[184]/2)+ppm[187]/2-ppm[209]+ppm[324]/4) tensor[x2,x2,1+x1,x1]+(2 ppm[184]+ppm[201]+ppm[209]-ppm[324]/2) tensor[x2,x2,1+x1,1+x1]+(-ppm[184]+ppm[187]-2 ppm[209]+ppm[324]/2) tensor[x2,x2,1+x1,x2]+(-ppm[184]-ppm[187]-ppm[201]+ppm[209]) tensor[x2,x2,1+x1,1+x1+x1 x2]-2 ppm[209] tensor[x2,x2,x2,x1]+(-3 ppm[184]-ppm[187]-2 ppm[201]+ppm[324]/2) tensor[x2,x2,x2,1+x1]+(-((3 ppm[184])/2)-ppm[187]/2-ppm[201]-ppm[209]+ppm[324]/4) tensor[x2,x2,x2,1+x2]+(3 ppm[184]+ppm[187]+2 ppm[201]-ppm[324]/2) tensor[x2,x2,x2,1+x1+x1 x2]+(-ppm[201]+ppm[209]) tensor[x2,x2,1+x2,x1]+(-(ppm[184]/2)+ppm[187]/2-2 ppm[209]+ppm[324]/4) tensor[x2,x2,1+x2,x2]+(-ppm[201]+ppm[209]) tensor[x2,x2,1+x2,1+x2]+(ppm[184]/2-ppm[187]/2+ppm[209]-ppm[324]/4) tensor[x2,x2,1+x2,1+x1+x1 x2]+(ppm[184]/2-ppm[187]/2+ppm[209]-ppm[324]/4) tensor[x2,x2,1+x1+x1 x2,x1]+(ppm[184]+ppm[187]+ppm[201]-ppm[209]) tensor[x2,x2,1+x1+x1 x2,1+x1]+(ppm[184]-ppm[187]+2 ppm[209]-ppm[324]/2) tensor[x2,x2,1+x1+x1 x2,x2]+((3 ppm[184])/2+ppm[187]/2+ppm[201]-ppm[324]/4) tensor[x2,x2,1+x1+x1 x2,1+x2]+(-2 ppm[184]-ppm[201]-ppm[209]+ppm[324]/2) tensor[x2,x2,1+x1+x1 x2,1+x1+x1 x2]+2 ppm[209] tensor[x2,1+x2,x1,x1]+2 ppm[209] tensor[x2,1+x2,x1,1+x2]+(-ppm[184]-ppm[187]) tensor[x2,1+x2,x1,1+x1+x1 x2]+(-(ppm[184]/2)-ppm[187]/2+ppm[324]/4) tensor[x2,1+x2,x2,1+x1]+(ppm[184]/2+ppm[187]/2-2 ppm[209]-ppm[324]/4) tensor[x2,1+x2,x2,x2]+ppm[209] tensor[x2,1+x2,x2,1+x1+x1 x2]+2 ppm[209] tensor[x2,1+x2,1+x2,x1]+2 ppm[209] tensor[x2,1+x2,1+x2,1+x2]+(-ppm[184]-ppm[187]) tensor[x2,1+x2,1+x2,1+x1+x1 x2]+1/2 ppm[324] tensor[x2,1+x2,1+x1+x1 x2,x1]+(ppm[184]/2+ppm[187]/2-ppm[324]/4) tensor[x2,1+x2,1+x1+x1 x2,1+x1]+(-(ppm[184]/2)-ppm[187]/2+ppm[209]+ppm[324]/4) tensor[x2,1+x2,1+x1+x1 x2,x2]+(ppm[184]/2+ppm[187]/2+ppm[324]/4) tensor[x2,1+x2,1+x1+x1 x2,1+x2]-ppm[209] tensor[x2,1+x2,1+x1+x1 x2,1+x1+x1 x2]+(ppm[184]/2+ppm[187]/2+ppm[201]-2 ppm[209]-ppm[324]/4) tensor[x2,1+x1+x1 x2,x1,x1]+(2 ppm[184]+ppm[201]-ppm[324]/2) tensor[x2,1+x1+x1 x2,x1,1+x1]+(-(ppm[184]/2)-ppm[187]/2+ppm[209]+ppm[324]/4) tensor[x2,1+x1+x1 x2,x1,x2]+(2 ppm[184]+ppm[201]-ppm[209]-ppm[324]/2) tensor[x2,1+x1+x1 x2,x1,1+x2]+(-((3 ppm[184])/2)+ppm[187]/2-2 ppm[201]+ppm[324]/4) tensor[x2,1+x1+x1 x2,x1,1+x1+x1 x2]+((3 ppm[184])/2-ppm[187]/2+ppm[209]-ppm[324]/4) tensor[x2,1+x1+x1 x2,1+x1,x1]+(-2 ppm[184]-ppm[201]+ppm[324]/2) tensor[x2,1+x1+x1 x2,1+x1,1+x1]+(ppm[184]-ppm[324]/2) tensor[x2,1+x1+x1 x2,1+x1,x2]+(ppm[184]+ppm[201]) tensor[x2,1+x1+x1 x2,1+x1,1+x1+x1 x2]+(-(ppm[184]/2)-ppm[187]/2+ppm[209]+ppm[324]/4) tensor[x2,1+x1+x1 x2,x2,x1]+(2 ppm[184]+ppm[187]+ppm[201]-ppm[209]-ppm[324]/2) tensor[x2,1+x1+x1 x2,x2,1+x1]+(-ppm[184]-ppm[187]+2 ppm[209]+ppm[324]/2) tensor[x2,1+x1+x1 x2,x2,x2]+(ppm[184]+ppm[209]) tensor[x2,1+x1+x1 x2,x2,1+x2]+(-ppm[184]-ppm[201]-ppm[209]) tensor[x2,1+x1+x1 x2,x2,1+x1+x1 x2]+(2 ppm[184]+ppm[201]-ppm[209]-ppm[324]/2) tensor[x2,1+x1+x1 x2,1+x2,x1]+(ppm[184]/2-ppm[187]/2+ppm[209]-ppm[324]/4) tensor[x2,1+x1+x1 x2,1+x2,x2]+(2 ppm[184]+ppm[201]-ppm[209]-ppm[324]/2) tensor[x2,1+x1+x1 x2,1+x2,1+x2]+(-(ppm[184]/2)+ppm[187]/2-ppm[201]+ppm[324]/4) tensor[x2,1+x1+x1 x2,1+x2,1+x1+x1 x2]+(-ppm[184]+ppm[187]-2 ppm[209]) tensor[x2,1+x1+x1 x2,1+x1+x1 x2,x1]+(-ppm[187]+ppm[209]) tensor[x2,1+x1+x1 x2,1+x1+x1 x2,1+x1]+(ppm[187]-2 ppm[209]) tensor[x2,1+x1+x1 x2,1+x1+x1 x2,x2]+(-ppm[184]-ppm[209]) tensor[x2,1+x1+x1 x2,1+x1+x1 x2,1+x2]+ppm[209] tensor[x2,1+x1+x1 x2,1+x1+x1 x2,1+x1+x1 x2]+2 ppm[209] tensor[1+x2,x1,x1,x2]-ppm[209] tensor[1+x2,x1,x1,1+x1+x1 x2]+2 ppm[209] tensor[1+x2,x1,x2,x1]+(ppm[201]-ppm[209]) tensor[1+x2,x1,x2,1+x1]+(-ppm[201]+ppm[209]) tensor[1+x2,x1,x2,x2]+2 ppm[201] tensor[1+x2,x1,x2,1+x2]+(-2 ppm[184]+ppm[324]/2) tensor[1+x2,x1,x2,1+x1+x1 x2]+2 ppm[209] tensor[1+x2,x1,1+x2,x2]-ppm[209] tensor[1+x2,x1,1+x2,1+x1+x1 x2]-ppm[209] tensor[1+x2,x1,1+x1+x1 x2,x1]+(-ppm[201]+ppm[209]) tensor[1+x2,x1,1+x1+x1 x2,1+x1]+(-2 ppm[184]+ppm[201]-ppm[209]+ppm[324]/2) tensor[1+x2,x1,1+x1+x1 x2,x2]-ppm[201] tensor[1+x2,x1,1+x1+x1 x2,1+x2]+(2 ppm[184]-ppm[324]/2) tensor[1+x2,x1,1+x1+x1 x2,1+x1+x1 x2]+2 ppm[209] tensor[1+x2,x2,x1,x1]+(ppm[201]-ppm[209]) tensor[1+x2,x2,x1,1+x1]+(-ppm[201]+ppm[209]) tensor[1+x2,x2,x1,x2]+2 ppm[201] tensor[1+x2,x2,x1,1+x2]+(-2 ppm[184]+ppm[324]/2) tensor[1+x2,x2,x1,1+x1+x1 x2]+(ppm[201]-ppm[209]) tensor[1+x2,x2,1+x1,x1]+(-ppm[201]+ppm[209]) tensor[1+x2,x2,1+x1,1+x1]+(-(ppm[184]/2)+ppm[187]/2+ppm[201]-ppm[209]+ppm[324]/4) tensor[1+x2,x2,1+x1,x2]+(ppm[184]/2-ppm[187]/2-ppm[324]/4) tensor[1+x2,x2,1+x1,1+x1+x1 x2]+(-ppm[201]+ppm[209]) tensor[1+x2,x2,x2,x1]+(-ppm[184]+ppm[201]-ppm[209]) tensor[1+x2,x2,x2,1+x1]+((3 ppm[184])/2-ppm[187]/2-ppm[201]-ppm[209]-ppm[324]/4) tensor[1+x2,x2,x2,x2]+(-(ppm[184]/2)+ppm[187]/2+ppm[209]+ppm[324]/4) tensor[1+x2,x2,x2,1+x1+x1 x2]+2 ppm[201] tensor[1+x2,x2,1+x2,x1]+2 ppm[201] tensor[1+x2,x2,1+x2,1+x2]+(-((3 ppm[184])/2)-ppm[187]/2+ppm[324]/4) tensor[1+x2,x2,1+x2,1+x1+x1 x2]+(-ppm[184]+ppm[187]) tensor[1+x2,x2,1+x1+x1 x2,x1]+ppm[184] tensor[1+x2,x2,1+x1+x1 x2,1+x1]+(-ppm[184]+ppm[209]) tensor[1+x2,x2,1+x1+x1 x2,x2]+ppm[187] tensor[1+x2,x2,1+x1+x1 x2,1+x2]-ppm[209] tensor[1+x2,x2,1+x1+x1 x2,1+x1+x1 x2]+2 ppm[209] tensor[1+x2,1+x2,x1,x2]-ppm[209] tensor[1+x2,1+x2,x1,1+x1+x1 x2]+2 ppm[209] tensor[1+x2,1+x2,x2,x1]+(ppm[201]-ppm[209]) tensor[1+x2,1+x2,x2,1+x1]+(-ppm[201]+ppm[209]) tensor[1+x2,1+x2,x2,x2]+2 ppm[201] tensor[1+x2,1+x2,x2,1+x2]+(-2 ppm[184]+ppm[324]/2) tensor[1+x2,1+x2,x2,1+x1+x1 x2]+2 ppm[209] tensor[1+x2,1+x2,1+x2,x2]-ppm[209] tensor[1+x2,1+x2,1+x2,1+x1+x1 x2]-ppm[209] tensor[1+x2,1+x2,1+x1+x1 x2,x1]+(-ppm[201]+ppm[209]) tensor[1+x2,1+x2,1+x1+x1 x2,1+x1]+(-2 ppm[184]+ppm[201]-ppm[209]+ppm[324]/2) tensor[1+x2,1+x2,1+x1+x1 x2,x2]-ppm[201] tensor[1+x2,1+x2,1+x1+x1 x2,1+x2]+(2 ppm[184]-ppm[324]/2) tensor[1+x2,1+x2,1+x1+x1 x2,1+x1+x1 x2]-ppm[209] tensor[1+x2,1+x1+x1 x2,x1,x1]+(-ppm[201]+ppm[209]) tensor[1+x2,1+x1+x1 x2,x1,1+x1]+(-ppm[184]+ppm[187]+ppm[201]-ppm[209]) tensor[1+x2,1+x1+x1 x2,x1,x2]-ppm[201] tensor[1+x2,1+x1+x1 x2,x1,1+x2]+((3 ppm[184])/2-ppm[187]/2-ppm[324]/4) tensor[1+x2,1+x1+x1 x2,x1,1+x1+x1 x2]+(-ppm[201]+ppm[209]) tensor[1+x2,1+x1+x1 x2,1+x1,x1]+(ppm[201]-ppm[209]) tensor[1+x2,1+x1+x1 x2,1+x1,1+x1]+(ppm[184]/2-ppm[187]/2-ppm[201]+ppm[209]-ppm[324]/4) tensor[1+x2,1+x1+x1 x2,1+x1,x2]+(-(ppm[184]/2)+ppm[187]/2+ppm[324]/4) tensor[1+x2,1+x1+x1 x2,1+x1,1+x1+x1 x2]+(-ppm[184]+ppm[187]+ppm[201]-ppm[209]) tensor[1+x2,1+x1+x1 x2,x2,x1]+(ppm[184]-ppm[201]+ppm[209]) tensor[1+x2,1+x1+x1 x2,x2,1+x1]+(-((3 ppm[184])/2)+ppm[187]/2+ppm[201]+ppm[324]/4) tensor[1+x2,1+x1+x1 x2,x2,x2]+ppm[187] tensor[1+x2,1+x1+x1 x2,x2,1+x2]+(ppm[184]/2-ppm[187]/2-ppm[209]-ppm[324]/4) tensor[1+x2,1+x1+x1 x2,x2,1+x1+x1 x2]-ppm[201] tensor[1+x2,1+x1+x1 x2,1+x2,x1]+(-(ppm[184]/2)+ppm[187]/2-ppm[324]/4) tensor[1+x2,1+x1+x1 x2,1+x2,x2]-ppm[201] tensor[1+x2,1+x1+x1 x2,1+x2,1+x2]+ppm[184] tensor[1+x2,1+x1+x1 x2,1+x2,1+x1+x1 x2]+(ppm[184]-ppm[187]) tensor[1+x2,1+x1+x1 x2,1+x1+x1 x2,x1]-ppm[184] tensor[1+x2,1+x1+x1 x2,1+x1+x1 x2,1+x1]+(ppm[184]-ppm[209]) tensor[1+x2,1+x1+x1 x2,1+x1+x1 x2,x2]-ppm[187] tensor[1+x2,1+x1+x1 x2,1+x1+x1 x2,1+x2]+ppm[209] tensor[1+x2,1+x1+x1 x2,1+x1+x1 x2,1+x1+x1 x2]+((3 ppm[184])/2-ppm[187]/2-ppm[201]-ppm[209]-ppm[324]/4) tensor[1+x1+x1 x2,x1,x1,x1]+(-(ppm[184]/2)+ppm[187]/2+ppm[209]+ppm[324]/4) tensor[1+x1+x1 x2,x1,x1,1+x1]+((3 ppm[184])/2-ppm[187]/2-ppm[209]-ppm[324]/4) tensor[1+x1+x1 x2,x1,x1,x2]-ppm[209] tensor[1+x1+x1 x2,x1,x1,1+x2]+(-ppm[184]+ppm[209]) tensor[1+x1+x1 x2,x1,1+x1,x1]-ppm[209] tensor[1+x1+x1 x2,x1,1+x1,1+x1]+(-ppm[187]+ppm[209]) tensor[1+x1+x1 x2,x1,1+x1,x2]+ppm[187] tensor[1+x1+x1 x2,x1,1+x1,1+x1+x1 x2]+((3 ppm[184])/2-ppm[187]/2-ppm[209]-ppm[324]/4) tensor[1+x1+x1 x2,x1,x2,x1]+((3 ppm[184])/2+ppm[187]/2+ppm[209]-ppm[324]/4) tensor[1+x1+x1 x2,x1,x2,1+x1]+(-((3 ppm[184])/2)+ppm[187]/2+ppm[201]+ppm[324]/4) tensor[1+x1+x1 x2,x1,x2,x2]+(2 ppm[184]-ppm[324]/2) tensor[1+x1+x1 x2,x1,x2,1+x2]+(-ppm[187]-2 ppm[201]) tensor[1+x1+x1 x2,x1,x2,1+x1+x1 x2]-ppm[209] tensor[1+x1+x1 x2,x1,1+x2,x1]+(ppm[184]-ppm[187]) tensor[1+x1+x1 x2,x1,1+x2,x2]-ppm[209] tensor[1+x1+x1 x2,x1,1+x2,1+x2]+ppm[187] tensor[1+x1+x1 x2,x1,1+x2,1+x1+x1 x2]+(-((3 ppm[184])/2)-ppm[187]/2+ppm[324]/4) tensor[1+x1+x1 x2,x1,1+x1+x1 x2,1+x1]+((3 ppm[184])/2+ppm[187]/2-2 ppm[201]-ppm[324]/4) tensor[1+x1+x1 x2,x1,1+x1+x1 x2,x2]+(-((3 ppm[184])/2)-ppm[187]/2+ppm[324]/4) tensor[1+x1+x1 x2,x1,1+x1+x1 x2,1+x2]+2 ppm[201] tensor[1+x1+x1 x2,x1,1+x1+x1 x2,1+x1+x1 x2]+(-((3 ppm[184])/2)+ppm[187]/2+ppm[201]+ppm[324]/4) tensor[1+x1+x1 x2,1+x1,x1,x1]+(ppm[184]/2-ppm[187]/2-ppm[209]-ppm[324]/4) tensor[1+x1+x1 x2,1+x1,x1,1+x1]+(-(ppm[184]/2)-ppm[187]/2+ppm[209]+ppm[324]/4) tensor[1+x1+x1 x2,1+x1,x1,x2]+ppm[187] tensor[1+x1+x1 x2,1+x1,x1,1+x1+x1 x2]+(ppm[184]-ppm[209]) tensor[1+x1+x1 x2,1+x1,1+x1,x1]+ppm[209] tensor[1+x1+x1 x2,1+x1,1+x1,1+x1]+(ppm[187]-ppm[209]) tensor[1+x1+x1 x2,1+x1,1+x1,x2]-ppm[187] tensor[1+x1+x1 x2,1+x1,1+x1,1+x1+x1 x2]+(-(ppm[184]/2)-ppm[187]/2+ppm[209]+ppm[324]/4) tensor[1+x1+x1 x2,1+x1,x2,x1]+(-ppm[184]-ppm[209]) tensor[1+x1+x1 x2,1+x1,x2,1+x1]+(ppm[184]-ppm[187]-ppm[201]+ppm[209]) tensor[1+x1+x1 x2,1+x1,x2,x2]+(-(ppm[184]/2)-ppm[187]/2+ppm[324]/4) tensor[1+x1+x1 x2,1+x1,x2,1+x2]+(ppm[187]+ppm[201]) tensor[1+x1+x1 x2,1+x1,x2,1+x1+x1 x2]+(-(ppm[184]/2)+ppm[187]/2-ppm[324]/4) tensor[1+x1+x1 x2,1+x1,1+x1+x1 x2,x1]+ppm[184] tensor[1+x1+x1 x2,1+x1,1+x1+x1 x2,1+x1]+(-ppm[184]+ppm[201]) tensor[1+x1+x1 x2,1+x1,1+x1+x1 x2,x2]+(ppm[184]/2+ppm[187]/2-ppm[324]/4) tensor[1+x1+x1 x2,1+x1,1+x1+x1 x2,1+x2]-ppm[201] tensor[1+x1+x1 x2,1+x1,1+x1+x1 x2,1+x1+x1 x2]+((3 ppm[184])/2-ppm[187]/2-ppm[209]-ppm[324]/4) tensor[1+x1+x1 x2,x2,x1,x1]+((3 ppm[184])/2+ppm[187]/2+ppm[209]-ppm[324]/4) tensor[1+x1+x1 x2,x2,x1,1+x1]+(-((3 ppm[184])/2)+ppm[187]/2+ppm[201]+ppm[324]/4) tensor[1+x1+x1 x2,x2,x1,x2]+(2 ppm[184]-ppm[324]/2) tensor[1+x1+x1 x2,x2,x1,1+x2]+(-ppm[187]-2 ppm[201]) tensor[1+x1+x1 x2,x2,x1,1+x1+x1 x2]+(ppm[184]-ppm[201]+2 ppm[209]-ppm[324]/2) tensor[1+x1+x1 x2,x2,1+x1,x1]+(-2 ppm[184]-ppm[209]+ppm[324]/2) tensor[1+x1+x1 x2,x2,1+x1,1+x1]+(2 ppm[184]-ppm[187]-ppm[201]+ppm[209]-ppm[324]/2) tensor[1+x1+x1 x2,x2,1+x1,x2]+(ppm[187]+ppm[201]) tensor[1+x1+x1 x2,x2,1+x1,1+x1+x1 x2]+(-((3 ppm[184])/2)+ppm[187]/2+ppm[201]+ppm[324]/4) tensor[1+x1+x1 x2,x2,x2,x1]+(3 ppm[184]-ppm[324]/2) tensor[1+x1+x1 x2,x2,x2,1+x1]+(-3 ppm[184]+ppm[187]+2 ppm[201]+ppm[324]/2) tensor[1+x1+x1 x2,x2,x2,x2]+(ppm[184]/2+ppm[187]/2+ppm[209]-ppm[324]/4) tensor[1+x1+x1 x2,x2,x2,1+x2]+(-ppm[187]-2 ppm[201]) tensor[1+x1+x1 x2,x2,x2,1+x1+x1 x2]+(2 ppm[184]-ppm[324]/2) tensor[1+x1+x1 x2,x2,1+x2,x1]+ppm[209] tensor[1+x1+x1 x2,x2,1+x2,x2]+(2 ppm[184]-ppm[324]/2) tensor[1+x1+x1 x2,x2,1+x2,1+x2]-ppm[201] tensor[1+x1+x1 x2,x2,1+x2,1+x1+x1 x2]+(ppm[184]/2-ppm[187]/2-2 ppm[209]+ppm[324]/4) tensor[1+x1+x1 x2,x2,1+x1+x1 x2,x1]+(-ppm[184]+ppm[209]) tensor[1+x1+x1 x2,x2,1+x1+x1 x2,1+x1]+(ppm[184]-ppm[201]-ppm[209]) tensor[1+x1+x1 x2,x2,1+x1+x1 x2,x2]+(-(ppm[184]/2)-ppm[187]/2-ppm[209]+ppm[324]/4) tensor[1+x1+x1 x2,x2,1+x1+x1 x2,1+x2]+ppm[201] tensor[1+x1+x1 x2,x2,1+x1+x1 x2,1+x1+x1 x2]-ppm[209] tensor[1+x1+x1 x2,1+x2,x1,x1]+(ppm[184]-ppm[187]) tensor[1+x1+x1 x2,1+x2,x1,x2]-ppm[209] tensor[1+x1+x1 x2,1+x2,x1,1+x2]+ppm[187] tensor[1+x1+x1 x2,1+x2,x1,1+x1+x1 x2]+(ppm[184]-ppm[187]) tensor[1+x1+x1 x2,1+x2,x2,x1]+(ppm[184]/2+ppm[187]/2-ppm[324]/4) tensor[1+x1+x1 x2,1+x2,x2,1+x1]+(-(ppm[184]/2)-ppm[187]/2+ppm[209]+ppm[324]/4) tensor[1+x1+x1 x2,1+x2,x2,x2]+((3 ppm[184])/2-ppm[187]/2-ppm[324]/4) tensor[1+x1+x1 x2,1+x2,x2,1+x2]-ppm[201] tensor[1+x1+x1 x2,1+x2,x2,1+x1+x1 x2]-ppm[209] tensor[1+x1+x1 x2,1+x2,1+x2,x1]+(ppm[184]-ppm[187]) tensor[1+x1+x1 x2,1+x2,1+x2,x2]-ppm[209] tensor[1+x1+x1 x2,1+x2,1+x2,1+x2]+ppm[187] tensor[1+x1+x1 x2,1+x2,1+x2,1+x1+x1 x2]+(-(ppm[184]/2)+ppm[187]/2-ppm[324]/4) tensor[1+x1+x1 x2,1+x2,1+x1+x1 x2,x1]+(-(ppm[184]/2)-ppm[187]/2+ppm[324]/4) tensor[1+x1+x1 x2,1+x2,1+x1+x1 x2,1+x1]+(ppm[184]/2+ppm[187]/2-ppm[201]-ppm[324]/4) tensor[1+x1+x1 x2,1+x2,1+x1+x1 x2,x2]-ppm[184] tensor[1+x1+x1 x2,1+x2,1+x1+x1 x2,1+x2]+ppm[201] tensor[1+x1+x1 x2,1+x2,1+x1+x1 x2,1+x1+x1 x2]+(-ppm[201]+ppm[209]) tensor[1+x1+x1 x2,1+x1+x1 x2,x1,x1]+(-2 ppm[184]+ppm[324]/2) tensor[1+x1+x1 x2,1+x1+x1 x2,x1,1+x1]+(2 ppm[184]-ppm[201]-ppm[209]-ppm[324]/2) tensor[1+x1+x1 x2,1+x1+x1 x2,x1,x2]+(-2 ppm[184]+ppm[324]/2) tensor[1+x1+x1 x2,1+x1+x1 x2,x1,1+x2]+2 ppm[201] tensor[1+x1+x1 x2,1+x1+x1 x2,x1,1+x1+x1 x2]+(-2 ppm[184]+ppm[201]-ppm[209]+ppm[324]/2) tensor[1+x1+x1 x2,1+x1+x1 x2,1+x1,x1]+(2 ppm[184]-ppm[324]/2) tensor[1+x1+x1 x2,1+x1+x1 x2,1+x1,1+x1]+(-2 ppm[184]+ppm[201]+ppm[324]/2) tensor[1+x1+x1 x2,1+x1+x1 x2,1+x1,x2]-ppm[201] tensor[1+x1+x1 x2,1+x1+x1 x2,1+x1,1+x1+x1 x2]+(2 ppm[184]-ppm[201]-ppm[209]-ppm[324]/2) tensor[1+x1+x1 x2,1+x1+x1 x2,x2,x1]+(-2 ppm[184]+ppm[209]+ppm[324]/2) tensor[1+x1+x1 x2,1+x1+x1 x2,x2,1+x1]+(2 ppm[184]-ppm[201]-ppm[209]-ppm[324]/2) tensor[1+x1+x1 x2,1+x1+x1 x2,x2,x2]-ppm[209] tensor[1+x1+x1 x2,1+x1+x1 x2,x2,1+x2]+ppm[201] tensor[1+x1+x1 x2,1+x1+x1 x2,x2,1+x1+x1 x2]+(-2 ppm[184]+ppm[324]/2) tensor[1+x1+x1 x2,1+x1+x1 x2,1+x2,x1]-ppm[209] tensor[1+x1+x1 x2,1+x1+x1 x2,1+x2,x2]+(-2 ppm[184]+ppm[324]/2) tensor[1+x1+x1 x2,1+x1+x1 x2,1+x2,1+x2]+ppm[201] tensor[1+x1+x1 x2,1+x1+x1 x2,1+x2,1+x1+x1 x2]+2 ppm[209] tensor[1+x1+x1 x2,1+x1+x1 x2,1+x1+x1 x2,x1]-ppm[209] tensor[1+x1+x1 x2,1+x1+x1 x2,1+x1+x1 x2,1+x1]+ppm[209] tensor[1+x1+x1 x2,1+x1+x1 x2,1+x1+x1 x2,x2]+ppm[209] tensor[1+x1+x1 x2,1+x1+x1 x2,1+x1+x1 x2,1+x2];
a2PP[x1_,x2_]:=(-8 ppp[177]+4 ppp[178]-4 ppp[184]+6 ppp[187]+8 ppp[192]+4 ppp[201]-4 ppp[209]+3 ppp[211]+2 ppp[325]) tensor[x1,x1,x1,x1]+(4 ppp[177]-2 ppp[178]+2 ppp[184]-3 ppp[187]-4 ppp[192]-2 ppp[201]+2 ppp[209]-ppp[211]-ppp[325]) tensor[x1,x1,x1,1+x1]+(-4 ppp[177]+2 ppp[178]-2 ppp[184]+3 ppp[187]+4 ppp[192]+2 ppp[201]-2 ppp[209]+ppp[211]+ppp[325]) tensor[x1,x1,x1,x2]+ppp[211] tensor[x1,x1,x1,1+x2]+(-ppp[177]-ppp[178]-ppp[184]) tensor[x1,x1,x1,1+x1+x1 x2]+(4 ppp[177]-2 ppp[178]+2 ppp[184]-3 ppp[187]-4 ppp[192]-2 ppp[201]+2 ppp[209]-ppp[211]-ppp[325]) tensor[x1,x1,1+x1,x1]+(-2 ppp[177]-ppp[184]+ppp[187]+4 ppp[192]+3 ppp[201]-ppp[209]+ppp[211]+ppp[325]) tensor[x1,x1,1+x1,1+x1]+(ppp[177]-ppp[178]-ppp[187]-4 ppp[192]-3 ppp[201]+2 ppp[209]-ppp[211]-ppp[325]) tensor[x1,x1,1+x1,x2]+(ppp[177]+ppp[178]+ppp[184]-ppp[209]) tensor[x1,x1,1+x1,1+x1+x1 x2]+(-4 ppp[177]+2 ppp[178]-2 ppp[184]+3 ppp[187]+4 ppp[192]+2 ppp[201]-2 ppp[209]+ppp[211]+ppp[325]) tensor[x1,x1,x2,x1]+(ppp[177]-ppp[178]+ppp[184]-ppp[187]-4 ppp[192]-2 ppp[201]+ppp[209]-ppp[211]-ppp[325]) tensor[x1,x1,x2,1+x1]+(-6 ppp[177]+2 ppp[178]-4 ppp[184]+5 ppp[187]+4 ppp[192]+2 ppp[201]-2 ppp[209]+ppp[211]+ppp[325]) tensor[x1,x1,x2,x2]+(2 ppp[177]-ppp[178]+ppp[184]-2 ppp[187]+ppp[209]) tensor[x1,x1,x2,1+x1+x1 x2]+ppp[211] tensor[x1,x1,1+x2,x1]+ppp[211] tensor[x1,x1,1+x2,1+x2]-ppp[209] tensor[x1,x1,1+x2,1+x1+x1 x2]+(2 ppp[177]-ppp[178]) tensor[x1,x1,1+x1+x1 x2,x1]+(ppp[177]+ppp[178]-ppp[201]) tensor[x1,x1,1+x1+x1 x2,1+x1]+(2 ppp[177]-ppp[178]+2 ppp[184]-2 ppp[187]+ppp[201]) tensor[x1,x1,1+x1+x1 x2,x2]+(3 ppp[177]-ppp[201]) tensor[x1,x1,1+x1+x1 x2,1+x2]+(-3 ppp[177]-2 ppp[184]+2 ppp[187]) tensor[x1,x1,1+x1+x1 x2,1+x1+x1 x2]+(4 ppp[177]-2 ppp[178]+2 ppp[184]-3 ppp[187]-4 ppp[192]-2 ppp[201]+2 ppp[209]-ppp[211]-ppp[325]) tensor[x1,1+x1,x1,x1]+(-2 ppp[177]+2 ppp[178]-ppp[184]+ppp[187]+3 ppp[192]+2 ppp[201]-ppp[209]+ppp[211]+ppp[325]) tensor[x1,1+x1,x1,1+x1]+(3 ppp[177]-ppp[178]-ppp[187]-3 ppp[192]-2 ppp[201]+2 ppp[209]-ppp[211]-ppp[325]) tensor[x1,1+x1,x1,x2]+(ppp[184]-ppp[209]) tensor[x1,1+x1,x1,1+x1+x1 x2]+(ppp[187]+3 ppp[192]+3 ppp[201]-2 ppp[209]+ppp[211]+ppp[325]) tensor[x1,1+x1,1+x1,x1]+(-3 ppp[192]-3 ppp[201]+ppp[209]-ppp[211]-ppp[325]) tensor[x1,1+x1,1+x1,1+x1]+(ppp[184]+3 ppp[192]+3 ppp[201]-2 ppp[209]+ppp[211]+ppp[325]) tensor[x1,1+x1,1+x1,x2]+(-ppp[184]+ppp[209]) tensor[x1,1+x1,1+x1,1+x1+x1 x2]+(3 ppp[177]-ppp[178]-ppp[187]-3 ppp[192]-2 ppp[201]+2 ppp[209]-ppp[211]-ppp[325]) tensor[x1,1+x1,x2,x1]+(ppp[178]+3 ppp[192]+2 ppp[201]-ppp[209]+ppp[211]+ppp[325]) tensor[x1,1+x1,x2,1+x1]+(ppp[177]-ppp[178]-ppp[187]-3 ppp[192]-2 ppp[201]+2 ppp[209]-ppp[211]-ppp[325]) tensor[x1,1+x1,x2,x2]+3 ppp[177] tensor[x1,1+x1,x2,1+x2]+(-ppp[177]+ppp[187]-ppp[209]) tensor[x1,1+x1,x2,1+x1+x1 x2]+(-3 ppp[177]+ppp[178]-ppp[201]) tensor[x1,1+x1,1+x1+x1 x2,x1]+(-ppp[178]+ppp[201]) tensor[x1,1+x1,1+x1+x1 x2,1+x1]+(-ppp[177]+ppp[178]-ppp[184]+ppp[187]-ppp[201]) tensor[x1,1+x1,1+x1+x1 x2,x2]-3 ppp[177] tensor[x1,1+x1,1+x1+x1 x2,1+x2]+(ppp[177]+ppp[184]-ppp[187]) tensor[x1,1+x1,1+x1+x1 x2,1+x1+x1 x2]+(-4 ppp[177]+2 ppp[178]-2 ppp[184]+3 ppp[187]+4 ppp[192]+2 ppp[201]-2 ppp[209]+ppp[211]+ppp[325]) tensor[x1,x2,x1,x1]+(ppp[177]-ppp[178]+ppp[184]-ppp[187]-4 ppp[192]-2 ppp[201]+ppp[209]-ppp[211]-ppp[325]) tensor[x1,x2,x1,1+x1]+(-6 ppp[177]+2 ppp[178]-4 ppp[184]+5 ppp[187]+4 ppp[192]+2 ppp[201]-2 ppp[209]+ppp[211]+ppp[325]) tensor[x1,x2,x1,x2]+(2 ppp[177]-ppp[178]+ppp[184]-2 ppp[187]+ppp[209]) tensor[x1,x2,x1,1+x1+x1 x2]+(3 ppp[177]-ppp[178]-ppp[187]-4 ppp[192]-3 ppp[201]+2 ppp[209]-ppp[211]-ppp[325]) tensor[x1,x2,1+x1,x1]+(-ppp[177]+4 ppp[192]+3 ppp[201]-ppp[209]+ppp[211]+ppp[325]) tensor[x1,x2,1+x1,1+x1]+(3 ppp[177]-ppp[178]-ppp[187]-4 ppp[192]-3 ppp[201]+2 ppp[209]-ppp[211]-ppp[325]) tensor[x1,x2,1+x1,x2]+(-2 ppp[177]+ppp[178]+ppp[187]-ppp[209]) tensor[x1,x2,1+x1,1+x1+x1 x2]+(-6 ppp[177]+2 ppp[178]-4 ppp[184]+5 ppp[187]+4 ppp[192]+2 ppp[201]-2 ppp[209]+ppp[211]+ppp[325]) tensor[x1,x2,x2,x1]+(ppp[177]-ppp[178]+ppp[184]-ppp[187]-4 ppp[192]-2 ppp[201]+ppp[209]-ppp[211]-ppp[325]) tensor[x1,x2,x2,1+x1]+(-4 ppp[177]+2 ppp[178]-2 ppp[184]+3 ppp[187]+4 ppp[192]+2 ppp[201]-2 ppp[209]+ppp[211]+ppp[325]) tensor[x1,x2,x2,x2]+(-3 ppp[177]-2 ppp[184]+2 ppp[187]) tensor[x1,x2,x2,1+x2]+(3 ppp[177]-ppp[178]+ppp[184]-2 ppp[187]+ppp[209]) tensor[x1,x2,x2,1+x1+x1 x2]+(-2 ppp[184]+2 ppp[187]) tensor[x1,x2,1+x2,x2]+(ppp[184]-ppp[187]) tensor[x1,x2,1+x2,1+x1+x1 x2]+(3 ppp[177]-ppp[178]+2 ppp[184]-2 ppp[187]+ppp[201]) tensor[x1,x2,1+x1+x1 x2,x1]+(ppp[178]-ppp[184]+ppp[187]-ppp[201]) tensor[x1,x2,1+x1+x1 x2,1+x1]+(ppp[177]-ppp[178]+2 ppp[184]-2 ppp[187]+ppp[201]) tensor[x1,x2,1+x1+x1 x2,x2]+(3 ppp[177]+ppp[184]-ppp[187]) tensor[x1,x2,1+x1+x1 x2,1+x2]+(-ppp[177]-ppp[184]+ppp[187]) tensor[x1,x2,1+x1+x1 x2,1+x1+x1 x2]+ppp[211] tensor[x1,1+x2,x1,x1]+ppp[211] tensor[x1,1+x2,x1,1+x2]-ppp[209] tensor[x1,1+x2,x1,1+x1+x1 x2]-ppp[177] tensor[x1,1+x2,x2,1+x1]+(-3 ppp[177]-2 ppp[184]+2 ppp[187]) tensor[x1,1+x2,x2,x2]+(2 ppp[177]+ppp[184]-ppp[187]) tensor[x1,1+x2,x2,1+x1+x1 x2]+ppp[211] tensor[x1,1+x2,1+x2,x1]+ppp[211] tensor[x1,1+x2,1+x2,1+x2]-ppp[209] tensor[x1,1+x2,1+x2,1+x1+x1 x2]+(-ppp[177]-ppp[201]) tensor[x1,1+x2,1+x1+x1 x2,x1]+ppp[177] tensor[x1,1+x2,1+x1+x1 x2,1+x1]+(ppp[177]+ppp[184]-ppp[187]) tensor[x1,1+x2,1+x1+x1 x2,x2]-ppp[201] tensor[x1,1+x2,1+x1+x1 x2,1+x2]+(-2 ppp[177]-ppp[184]+ppp[187]) tensor[x1,1+x2,1+x1+x1 x2,1+x1+x1 x2]+(2 ppp[177]-ppp[178]) tensor[x1,1+x1+x1 x2,x1,x1]+(-ppp[177]+ppp[192]) tensor[x1,1+x1+x1 x2,x1,1+x1]+(3 ppp[177]-ppp[178]+2 ppp[184]-2 ppp[187]-ppp[192]) tensor[x1,1+x1+x1 x2,x1,x2]+(-ppp[177]+ppp[192]) tensor[x1,1+x1+x1 x2,x1,1+x2]+(-4 ppp[177]+2 ppp[178]-2 ppp[184]+2 ppp[187]) tensor[x1,1+x1+x1 x2,x1,1+x1+x1 x2]+(-3 ppp[177]+ppp[178]+ppp[192]) tensor[x1,1+x1+x1 x2,1+x1,x1]+(ppp[177]-ppp[192]) tensor[x1,1+x1+x1 x2,1+x1,1+x1]+(-3 ppp[177]+ppp[178]-ppp[184]+ppp[187]+ppp[192]) tensor[x1,1+x1+x1 x2,1+x1,x2]+(2 ppp[177]-ppp[178]+ppp[184]-ppp[187]) tensor[x1,1+x1+x1 x2,1+x1,1+x1+x1 x2]+(3 ppp[177]-ppp[178]+2 ppp[184]-2 ppp[187]-ppp[192]) tensor[x1,1+x1+x1 x2,x2,x1]+(-ppp[177]-ppp[184]+ppp[187]+ppp[192]) tensor[x1,1+x1+x1 x2,x2,1+x1]+(3 ppp[177]-ppp[178]+2 ppp[184]-2 ppp[187]-ppp[192]) tensor[x1,1+x1+x1 x2,x2,x2]+(ppp[184]-ppp[187]) tensor[x1,1+x1+x1 x2,x2,1+x2]+(-2 ppp[177]+ppp[178]-ppp[184]+ppp[187]) tensor[x1,1+x1+x1 x2,x2,1+x1+x1 x2]+(-ppp[177]+ppp[192]) tensor[x1,1+x1+x1 x2,1+x2,x1]+(ppp[184]-ppp[187]) tensor[x1,1+x1+x1 x2,1+x2,x2]+(-ppp[177]+ppp[192]) tensor[x1,1+x1+x1 x2,1+x2,1+x2]+(-2 ppp[177]+ppp[178]-ppp[184]+ppp[187]) tensor[x1,1+x1+x1 x2,1+x2,1+x1+x1 x2]+(-2 ppp[184]+2 ppp[187]) tensor[x1,1+x1+x1 x2,1+x1+x1 x2,x1]+(ppp[184]-ppp[187]) tensor[x1,1+x1+x1 x2,1+x1+x1 x2,1+x1]+(-ppp[184]+ppp[187]) tensor[x1,1+x1+x1 x2,1+x1+x1 x2,x2]+(-ppp[184]+ppp[187]) tensor[x1,1+x1+x1 x2,1+x1+x1 x2,1+x2]+(4 ppp[177]-2 ppp[178]+2 ppp[184]-3 ppp[187]-4 ppp[192]-2 ppp[201]+2 ppp[209]-ppp[211]-ppp[325]) tensor[1+x1,x1,x1,x1]+(ppp[187]+ppp[192]-ppp[201]+ppp[211]) tensor[1+x1,x1,x1,1+x1]+(ppp[177]-ppp[178]+ppp[184]-ppp[187]-ppp[192]+ppp[201]+ppp[209]-ppp[211]) tensor[1+x1,x1,x1,x2]+(ppp[178]-ppp[209]) tensor[1+x1,x1,x1,1+x1+x1 x2]+(-2 ppp[177]+2 ppp[178]-ppp[184]+ppp[187]+ppp[192]-ppp[209]+ppp[211]) tensor[1+x1,x1,1+x1,x1]+(-ppp[192]-ppp[211]) tensor[1+x1,x1,1+x1,1+x1]+(ppp[178]+ppp[192]-ppp[209]+ppp[211]) tensor[1+x1,x1,1+x1,x2]+(-ppp[178]+ppp[209]) tensor[1+x1,x1,1+x1,1+x1+x1 x2]+(ppp[177]-ppp[178]+ppp[184]-ppp[187]-ppp[192]+ppp[201]+ppp[209]-ppp[211]) tensor[1+x1,x1,x2,x1]+(ppp[192]-ppp[201]+ppp[211]) tensor[1+x1,x1,x2,1+x1]+(ppp[177]-ppp[178]+ppp[184]-ppp[187]-ppp[192]+ppp[201]+ppp[209]-ppp[211]) tensor[1+x1,x1,x2,x2]-ppp[177] tensor[1+x1,x1,x2,1+x2]+(-2 ppp[177]+ppp[178]-ppp[184]+ppp[187]-ppp[209]) tensor[1+x1,x1,x2,1+x1+x1 x2]+(-ppp[177]-ppp[201]) tensor[1+x1,x1,1+x1+x1 x2,x1]+ppp[201] tensor[1+x1,x1,1+x1+x1 x2,1+x1]+(-2 ppp[177]-ppp[184]+ppp[187]-ppp[201]) tensor[1+x1,x1,1+x1+x1 x2,x2]-ppp[177] tensor[1+x1,x1,1+x1+x1 x2,1+x2]+(2 ppp[177]+ppp[184]-ppp[187]) tensor[1+x1,x1,1+x1+x1 x2,1+x1+x1 x2]+(-2 ppp[177]-ppp[184]+ppp[187]-ppp[201]-ppp[209]+ppp[211]) tensor[1+x1,1+x1,x1,x1]+(ppp[201]-ppp[211]) tensor[1+x1,1+x1,x1,1+x1]+(-ppp[177]-ppp[201]-ppp[209]+ppp[211]) tensor[1+x1,1+x1,x1,x2]+ppp[209] tensor[1+x1,1+x1,x1,1+x1+x1 x2]+(ppp[209]-ppp[211]) tensor[1+x1,1+x1,1+x1,x1]+ppp[211] tensor[1+x1,1+x1,1+x1,1+x1]+(ppp[209]-ppp[211]) tensor[1+x1,1+x1,1+x1,x2]-ppp[209] tensor[1+x1,1+x1,1+x1,1+x1+x1 x2]+(-ppp[177]-ppp[201]-ppp[209]+ppp[211]) tensor[1+x1,1+x1,x2,x1]+(ppp[201]-ppp[211]) tensor[1+x1,1+x1,x2,1+x1]+(-2 ppp[177]-ppp[184]+ppp[187]-ppp[201]-ppp[209]+ppp[211]) tensor[1+x1,1+x1,x2,x2]-ppp[177] tensor[1+x1,1+x1,x2,1+x2]+(2 ppp[177]+ppp[184]-ppp[187]+ppp[209]) tensor[1+x1,1+x1,x2,1+x1+x1 x2]+(ppp[177]+ppp[201]) tensor[1+x1,1+x1,1+x1+x1 x2,x1]-ppp[201] tensor[1+x1,1+x1,1+x1+x1 x2,1+x1]+(2 ppp[177]+ppp[184]-ppp[187]+ppp[201]) tensor[1+x1,1+x1,1+x1+x1 x2,x2]+ppp[177] tensor[1+x1,1+x1,1+x1+x1 x2,1+x2]+(-2 ppp[177]-ppp[184]+ppp[187]) tensor[1+x1,1+x1,1+x1+x1 x2,1+x1+x1 x2]+(ppp[177]-ppp[178]+ppp[184]-ppp[187]-ppp[192]+ppp[201]+ppp[209]-ppp[211]) tensor[1+x1,x2,x1,x1]+(ppp[192]-ppp[201]+ppp[211]) tensor[1+x1,x2,x1,1+x1]+(ppp[177]-ppp[178]+ppp[184]-ppp[187]-ppp[192]+ppp[201]+ppp[209]-ppp[211]) tensor[1+x1,x2,x1,x2]-ppp[177] tensor[1+x1,x2,x1,1+x2]+(-2 ppp[177]+ppp[178]-ppp[184]+ppp[187]-ppp[209]) tensor[1+x1,x2,x1,1+x1+x1 x2]+(ppp[178]+ppp[192]-ppp[209]+ppp[211]) tensor[1+x1,x2,1+x1,x1]+(-ppp[192]-ppp[211]) tensor[1+x1,x2,1+x1,1+x1]+(-2 ppp[177]+2 ppp[178]-ppp[184]+ppp[187]+ppp[192]-ppp[209]+ppp[211]) tensor[1+x1,x2,1+x1,x2]+(2 ppp[177]-2 ppp[178]+ppp[184]-ppp[187]+ppp[209]) tensor[1+x1,x2,1+x1,1+x1+x1 x2]+(ppp[177]-ppp[178]+ppp[184]-ppp[187]-ppp[192]+ppp[201]+ppp[209]-ppp[211]) tensor[1+x1,x2,x2,x1]+(ppp[187]+ppp[192]-ppp[201]+ppp[211]) tensor[1+x1,x2,x2,1+x1]+(4 ppp[177]-2 ppp[178]+2 ppp[184]-3 ppp[187]-4 ppp[192]-2 ppp[201]+2 ppp[209]-ppp[211]-ppp[325]) tensor[1+x1,x2,x2,x2]+(ppp[177]+ppp[184]) tensor[1+x1,x2,x2,1+x2]+(-4 ppp[177]+2 ppp[178]-2 ppp[184]+2 ppp[187]+3 ppp[192]+3 ppp[201]-2 ppp[209]+ppp[325]) tensor[1+x1,x2,x2,1+x1+x1 x2]-ppp[177] tensor[1+x1,x2,1+x2,x1]+(-2 ppp[177]+ppp[178]) tensor[1+x1,x2,1+x2,x2]-ppp[177] tensor[1+x1,x2,1+x2,1+x2]-ppp[178] tensor[1+x1,x2,1+x2,1+x1+x1 x2]+(-ppp[177]-ppp[184]+ppp[187]-ppp[201]) tensor[1+x1,x2,1+x1+x1 x2,x1]+(-ppp[187]+ppp[201]) tensor[1+x1,x2,1+x1+x1 x2,1+x1]+(-2 ppp[177]-ppp[184]+2 ppp[187]+3 ppp[192]+2 ppp[201]-ppp[209]+ppp[325]) tensor[1+x1,x2,1+x1+x1 x2,x2]+(-ppp[177]-ppp[184]) tensor[1+x1,x2,1+x1+x1 x2,1+x2]+(2 ppp[177]+ppp[184]-ppp[187]-3 ppp[192]-3 ppp[201]+ppp[209]-ppp[325]) tensor[1+x1,x2,1+x1+x1 x2,1+x1+x1 x2]+(ppp[177]+ppp[178]+ppp[192]) tensor[1+x1,1+x1+x1 x2,x1,x1]-ppp[192] tensor[1+x1,1+x1+x1 x2,x1,1+x1]+(ppp[178]-ppp[184]+ppp[187]+ppp[192]) tensor[1+x1,1+x1+x1 x2,x1,x2]+ppp[177] tensor[1+x1,1+x1+x1 x2,x1,1+x2]+(2 ppp[177]-ppp[178]+ppp[184]-ppp[187]) tensor[1+x1,1+x1+x1 x2,x1,1+x1+x1 x2]+(-ppp[178]-ppp[192]) tensor[1+x1,1+x1+x1 x2,1+x1,x1]+ppp[192] tensor[1+x1,1+x1+x1 x2,1+x1,1+x1]+(2 ppp[177]-2 ppp[178]+ppp[184]-ppp[187]-ppp[192]) tensor[1+x1,1+x1+x1 x2,1+x1,x2]+(-2 ppp[177]+2 ppp[178]-ppp[184]+ppp[187]) tensor[1+x1,1+x1+x1 x2,1+x1,1+x1+x1 x2]+(ppp[178]-ppp[184]+ppp[187]+ppp[192]) tensor[1+x1,1+x1+x1 x2,x2,x1]+(-ppp[187]-ppp[192]) tensor[1+x1,1+x1+x1 x2,x2,1+x1]+(-2 ppp[177]+2 ppp[178]-ppp[184]+2 ppp[187]+4 ppp[192]+3 ppp[201]-ppp[209]+ppp[325]) tensor[1+x1,1+x1+x1 x2,x2,x2]-ppp[184] tensor[1+x1,1+x1+x1 x2,x2,1+x2]+(2 ppp[177]-2 ppp[178]+ppp[184]-ppp[187]-3 ppp[192]-3 ppp[201]+ppp[209]-ppp[325]) tensor[1+x1,1+x1+x1 x2,x2,1+x1+x1 x2]+ppp[177] tensor[1+x1,1+x1+x1 x2,1+x2,x1]+(2 ppp[177]-ppp[178]) tensor[1+x1,1+x1+x1 x2,1+x2,x2]+ppp[177] tensor[1+x1,1+x1+x1 x2,1+x2,1+x2]+ppp[178] tensor[1+x1,1+x1+x1 x2,1+x2,1+x1+x1 x2]+(ppp[184]-ppp[187]) tensor[1+x1,1+x1+x1 x2,1+x1+x1 x2,x1]+ppp[187] tensor[1+x1,1+x1+x1 x2,1+x1+x1 x2,1+x1]+(-ppp[187]-3 ppp[192]-3 ppp[201]+ppp[209]-ppp[325]) tensor[1+x1,1+x1+x1 x2,1+x1+x1 x2,x2]+ppp[184] tensor[1+x1,1+x1+x1 x2,1+x1+x1 x2,1+x2]+(3 ppp[192]+3 ppp[201]-ppp[209]+ppp[325]) tensor[1+x1,1+x1+x1 x2,1+x1+x1 x2,1+x1+x1 x2]+(-4 ppp[177]+2 ppp[178]-2 ppp[184]+3 ppp[187]+4 ppp[192]+2 ppp[201]-2 ppp[209]+ppp[211]+ppp[325]) tensor[x2,x1,x1,x1]+(ppp[177]-ppp[178]+ppp[184]-ppp[187]-4 ppp[192]-2 ppp[201]+ppp[209]-ppp[211]-ppp[325]) tensor[x2,x1,x1,1+x1]+(-6 ppp[177]+2 ppp[178]-4 ppp[184]+5 ppp[187]+4 ppp[192]+2 ppp[201]-2 ppp[209]+ppp[211]+ppp[325]) tensor[x2,x1,x1,x2]+(2 ppp[177]-ppp[178]+ppp[184]-2 ppp[187]+ppp[209]) tensor[x2,x1,x1,1+x1+x1 x2]+(3 ppp[177]-ppp[178]-ppp[187]-4 ppp[192]-3 ppp[201]+2 ppp[209]-ppp[211]-ppp[325]) tensor[x2,x1,1+x1,x1]+(-ppp[177]+4 ppp[192]+3 ppp[201]-ppp[209]+ppp[211]+ppp[325]) tensor[x2,x1,1+x1,1+x1]+(3 ppp[177]-ppp[178]-ppp[187]-4 ppp[192]-3 ppp[201]+2 ppp[209]-ppp[211]-ppp[325]) tensor[x2,x1,1+x1,x2]+(-2 ppp[177]+ppp[178]+ppp[187]-ppp[209]) tensor[x2,x1,1+x1,1+x1+x1 x2]+(-6 ppp[177]+2 ppp[178]-4 ppp[184]+5 ppp[187]+4 ppp[192]+2 ppp[201]-2 ppp[209]+ppp[211]+ppp[325]) tensor[x2,x1,x2,x1]+(ppp[177]-ppp[178]+ppp[184]-ppp[187]-4 ppp[192]-2 ppp[201]+ppp[209]-ppp[211]-ppp[325]) tensor[x2,x1,x2,1+x1]+(-4 ppp[177]+2 ppp[178]-2 ppp[184]+3 ppp[187]+4 ppp[192]+2 ppp[201]-2 ppp[209]+ppp[211]+ppp[325]) tensor[x2,x1,x2,x2]+(-3 ppp[177]-2 ppp[184]+2 ppp[187]) tensor[x2,x1,x2,1+x2]+(3 ppp[177]-ppp[178]+ppp[184]-2 ppp[187]+ppp[209]) tensor[x2,x1,x2,1+x1+x1 x2]+(-2 ppp[184]+2 ppp[187]) tensor[x2,x1,1+x2,x2]+(ppp[184]-ppp[187]) tensor[x2,x1,1+x2,1+x1+x1 x2]+(3 ppp[177]-ppp[178]+2 ppp[184]-2 ppp[187]+ppp[201]) tensor[x2,x1,1+x1+x1 x2,x1]+(ppp[178]-ppp[184]+ppp[187]-ppp[201]) tensor[x2,x1,1+x1+x1 x2,1+x1]+(ppp[177]-ppp[178]+2 ppp[184]-2 ppp[187]+ppp[201]) tensor[x2,x1,1+x1+x1 x2,x2]+(3 ppp[177]+ppp[184]-ppp[187]) tensor[x2,x1,1+x1+x1 x2,1+x2]+(-ppp[177]-ppp[184]+ppp[187]) tensor[x2,x1,1+x1+x1 x2,1+x1+x1 x2]+(ppp[177]-ppp[178]-ppp[187]-3 ppp[192]-2 ppp[201]+2 ppp[209]-ppp[211]-ppp[325]) tensor[x2,1+x1,x1,x1]+(ppp[178]+3 ppp[192]+2 ppp[201]-ppp[209]+ppp[211]+ppp[325]) tensor[x2,1+x1,x1,1+x1]+(3 ppp[177]-ppp[178]-ppp[187]-3 ppp[192]-2 ppp[201]+2 ppp[209]-ppp[211]-ppp[325]) tensor[x2,1+x1,x1,x2]+(ppp[187]-ppp[209]) tensor[x2,1+x1,x1,1+x1+x1 x2]+(ppp[184]+3 ppp[192]+3 ppp[201]-2 ppp[209]+ppp[211]+ppp[325]) tensor[x2,1+x1,1+x1,x1]+(-3 ppp[192]-3 ppp[201]+ppp[209]-ppp[211]-ppp[325]) tensor[x2,1+x1,1+x1,1+x1]+(ppp[187]+3 ppp[192]+3 ppp[201]-2 ppp[209]+ppp[211]+ppp[325]) tensor[x2,1+x1,1+x1,x2]+(-ppp[187]+ppp[209]) tensor[x2,1+x1,1+x1,1+x1+x1 x2]+(3 ppp[177]-ppp[178]-ppp[187]-3 ppp[192]-2 ppp[201]+2 ppp[209]-ppp[211]-ppp[325]) tensor[x2,1+x1,x2,x1]+(-2 ppp[177]+2 ppp[178]-ppp[184]+ppp[187]+3 ppp[192]+2 ppp[201]-ppp[209]+ppp[211]+ppp[325]) tensor[x2,1+x1,x2,1+x1]+(4 ppp[177]-2 ppp[178]+2 ppp[184]-3 ppp[187]-4 ppp[192]-2 ppp[201]+2 ppp[209]-ppp[211]-ppp[325]) tensor[x2,1+x1,x2,x2]+(ppp[177]+ppp[178]) tensor[x2,1+x1,x2,1+x2]+(-2 ppp[177]-ppp[184]+2 ppp[187]+ppp[192]-ppp[209]) tensor[x2,1+x1,x2,1+x1+x1 x2]+(-3 ppp[177]+ppp[178]-ppp[184]+ppp[187]-ppp[201]) tensor[x2,1+x1,1+x1+x1 x2,x1]+(2 ppp[177]-2 ppp[178]+ppp[184]-ppp[187]+ppp[201]) tensor[x2,1+x1,1+x1+x1 x2,1+x1]+(-4 ppp[177]+2 ppp[178]-2 ppp[184]+2 ppp[187]+ppp[192]-ppp[201]) tensor[x2,1+x1,1+x1+x1 x2,x2]+(-ppp[177]-ppp[178]) tensor[x2,1+x1,1+x1+x1 x2,1+x2]+(2 ppp[177]+ppp[184]-ppp[187]-ppp[192]) tensor[x2,1+x1,1+x1+x1 x2,1+x1+x1 x2]+(-6 ppp[177]+2 ppp[178]-4 ppp[184]+5 ppp[187]+4 ppp[192]+2 ppp[201]-2 ppp[209]+ppp[211]+ppp[325]) tensor[x2,x2,x1,x1]+(ppp[177]-ppp[178]+ppp[184]-ppp[187]-4 ppp[192]-2 ppp[201]+ppp[209]-ppp[211]-ppp[325]) tensor[x2,x2,x1,1+x1]+(-4 ppp[177]+2 ppp[178]-2 ppp[184]+3 ppp[187]+4 ppp[192]+2 ppp[201]-2 ppp[209]+ppp[211]+ppp[325]) tensor[x2,x2,x1,x2]+(-3 ppp[177]-2 ppp[184]+2 ppp[187]) tensor[x2,x2,x1,1+x2]+(3 ppp[177]-ppp[178]+ppp[184]-2 ppp[187]+ppp[209]) tensor[x2,x2,x1,1+x1+x1 x2]+(ppp[177]-ppp[178]-ppp[187]-4 ppp[192]-3 ppp[201]+2 ppp[209]-ppp[211]-ppp[325]) tensor[x2,x2,1+x1,x1]+(-2 ppp[177]-ppp[184]+ppp[187]+4 ppp[192]+3 ppp[201]-ppp[209]+ppp[211]+ppp[325]) tensor[x2,x2,1+x1,1+x1]+(4 ppp[177]-2 ppp[178]+2 ppp[184]-3 ppp[187]-4 ppp[192]-2 ppp[201]+2 ppp[209]-ppp[211]-ppp[325]) tensor[x2,x2,1+x1,x2]+(-2 ppp[177]+2 ppp[178]-ppp[184]+2 ppp[187]-ppp[201]-ppp[209]) tensor[x2,x2,1+x1,1+x1+x1 x2]+(-4 ppp[177]+2 ppp[178]-2 ppp[184]+3 ppp[187]+4 ppp[192]+2 ppp[201]-2 ppp[209]+ppp[211]+ppp[325]) tensor[x2,x2,x2,x1]+(4 ppp[177]-2 ppp[178]+2 ppp[184]-3 ppp[187]-4 ppp[192]-2 ppp[201]+2 ppp[209]-ppp[211]-ppp[325]) tensor[x2,x2,x2,1+x1]+(-8 ppp[177]+4 ppp[178]-4 ppp[184]+6 ppp[187]+8 ppp[192]+4 ppp[201]-4 ppp[209]+3 ppp[211]+2 ppp[325]) tensor[x2,x2,x2,x2]+(-ppp[177]-ppp[178]-ppp[184]) tensor[x2,x2,x2,1+x2]+(4 ppp[177]-2 ppp[178]+2 ppp[184]-3 ppp[187]-4 ppp[192]-2 ppp[201]+2 ppp[209]-ppp[211]-ppp[325]) tensor[x2,x2,x2,1+x1+x1 x2]+(-3 ppp[177]-2 ppp[184]+2 ppp[187]) tensor[x2,x2,1+x2,x1]+(2 ppp[177]-ppp[178]) tensor[x2,x2,1+x2,x2]+(-3 ppp[177]-2 ppp[184]+2 ppp[187]) tensor[x2,x2,1+x2,1+x2]+(ppp[177]+ppp[178]-ppp[201]) tensor[x2,x2,1+x2,1+x1+x1 x2]+(3 ppp[177]-ppp[178]+2 ppp[184]-2 ppp[187]+ppp[201]) tensor[x2,x2,1+x1+x1 x2,x1]+(-2 ppp[177]+2 ppp[178]-ppp[184]+2 ppp[187]-ppp[201]-ppp[209]) tensor[x2,x2,1+x1+x1 x2,1+x1]+(4 ppp[177]-2 ppp[178]+2 ppp[184]-3 ppp[187]-4 ppp[192]-2 ppp[201]+2 ppp[209]-ppp[211]-ppp[325]) tensor[x2,x2,1+x1+x1 x2,x2]+(ppp[177]+ppp[178]+ppp[184]-ppp[209]) tensor[x2,x2,1+x1+x1 x2,1+x2]+(-2 ppp[177]-ppp[184]+ppp[187]+4 ppp[192]+3 ppp[201]-ppp[209]+ppp[211]+ppp[325]) tensor[x2,x2,1+x1+x1 x2,1+x1+x1 x2]+(-2 ppp[184]+2 ppp[187]) tensor[x2,1+x2,x1,x2]+(ppp[184]-ppp[187]) tensor[x2,1+x2,x1,1+x1+x1 x2]+(-2 ppp[184]+2 ppp[187]) tensor[x2,1+x2,x2,x1]+(-2 ppp[177]+ppp[178]) tensor[x2,1+x2,x2,1+x1]+(2 ppp[177]-ppp[178]) tensor[x2,1+x2,x2,x2]+(-4 ppp[177]+2 ppp[178]-2 ppp[184]+2 ppp[187]) tensor[x2,1+x2,x2,1+x2]+(-ppp[177]+ppp[192]) tensor[x2,1+x2,x2,1+x1+x1 x2]+(-2 ppp[184]+2 ppp[187]) tensor[x2,1+x2,1+x2,x2]+(ppp[184]-ppp[187]) tensor[x2,1+x2,1+x2,1+x1+x1 x2]+(ppp[184]-ppp[187]) tensor[x2,1+x2,1+x1+x1 x2,x1]+(2 ppp[177]-ppp[178]) tensor[x2,1+x2,1+x1+x1 x2,1+x1]+(-3 ppp[177]+ppp[178]+ppp[192]) tensor[x2,1+x2,1+x1+x1 x2,x2]+(2 ppp[177]-ppp[178]+ppp[184]-ppp[187]) tensor[x2,1+x2,1+x1+x1 x2,1+x2]+(ppp[177]-ppp[192]) tensor[x2,1+x2,1+x1+x1 x2,1+x1+x1 x2]+(2 ppp[177]-ppp[178]+2 ppp[184]-2 ppp[187]-ppp[192]) tensor[x2,1+x1+x1 x2,x1,x1]+(-2 ppp[177]-ppp[184]+ppp[187]+ppp[192]) tensor[x2,1+x1+x1 x2,x1,1+x1]+(ppp[177]-ppp[178]+2 ppp[184]-2 ppp[187]-ppp[192]) tensor[x2,1+x1+x1 x2,x1,x2]+(ppp[177]+ppp[184]-ppp[187]) tensor[x2,1+x1+x1 x2,x1,1+x2]+(-2 ppp[177]+ppp[178]-ppp[184]+ppp[187]) tensor[x2,1+x1+x1 x2,x1,1+x1+x1 x2]+(-ppp[177]+ppp[178]-ppp[184]+ppp[187]+ppp[192]) tensor[x2,1+x1+x1 x2,1+x1,x1]+(2 ppp[177]+ppp[184]-ppp[187]-ppp[192]) tensor[x2,1+x1+x1 x2,1+x1,1+x1]+(-4 ppp[177]+2 ppp[178]-2 ppp[184]+2 ppp[187]+ppp[192]-ppp[201]) tensor[x2,1+x1+x1 x2,1+x1,x2]+(2 ppp[177]-2 ppp[178]+ppp[184]-ppp[187]+ppp[201]) tensor[x2,1+x1+x1 x2,1+x1,1+x1+x1 x2]+(ppp[177]-ppp[178]+2 ppp[184]-2 ppp[187]-ppp[192]) tensor[x2,1+x1+x1 x2,x2,x1]+(-2 ppp[177]-ppp[184]+2 ppp[187]+ppp[192]-ppp[209]) tensor[x2,1+x1+x1 x2,x2,1+x1]+(4 ppp[177]-2 ppp[178]+2 ppp[184]-3 ppp[187]-4 ppp[192]-2 ppp[201]+2 ppp[209]-ppp[211]-ppp[325]) tensor[x2,1+x1+x1 x2,x2,x2]+(ppp[184]-ppp[209]) tensor[x2,1+x1+x1 x2,x2,1+x2]+(-2 ppp[177]+2 ppp[178]-ppp[184]+ppp[187]+3 ppp[192]+2 ppp[201]-ppp[209]+ppp[211]+ppp[325]) tensor[x2,1+x1+x1 x2,x2,1+x1+x1 x2]+(ppp[177]+ppp[184]-ppp[187]) tensor[x2,1+x1+x1 x2,1+x2,x1]+(-3 ppp[177]+ppp[178]-ppp[201]) tensor[x2,1+x1+x1 x2,1+x2,x2]+(ppp[177]+ppp[184]-ppp[187]) tensor[x2,1+x1+x1 x2,1+x2,1+x2]+(-ppp[178]+ppp[201]) tensor[x2,1+x1+x1 x2,1+x2,1+x1+x1 x2]+(-ppp[184]+ppp[187]) tensor[x2,1+x1+x1 x2,1+x1+x1 x2,x1]+(-ppp[187]+ppp[209]) tensor[x2,1+x1+x1 x2,1+x1+x1 x2,1+x1]+(ppp[187]+3 ppp[192]+3 ppp[201]-2 ppp[209]+ppp[211]+ppp[325]) tensor[x2,1+x1+x1 x2,1+x1+x1 x2,x2]+(-ppp[184]+ppp[209]) tensor[x2,1+x1+x1 x2,1+x1+x1 x2,1+x2]+(-3 ppp[192]-3 ppp[201]+ppp[209]-ppp[211]-ppp[325]) tensor[x2,1+x1+x1 x2,1+x1+x1 x2,1+x1+x1 x2]+ppp[211] tensor[1+x2,x1,x1,x1]+ppp[211] tensor[1+x2,x1,x1,1+x2]-ppp[209] tensor[1+x2,x1,x1,1+x1+x1 x2]-ppp[177] tensor[1+x2,x1,x2,1+x1]+(-3 ppp[177]-2 ppp[184]+2 ppp[187]) tensor[1+x2,x1,x2,x2]+(2 ppp[177]+ppp[184]-ppp[187]) tensor[1+x2,x1,x2,1+x1+x1 x2]+ppp[211] tensor[1+x2,x1,1+x2,x1]+ppp[211] tensor[1+x2,x1,1+x2,1+x2]-ppp[209] tensor[1+x2,x1,1+x2,1+x1+x1 x2]+(-ppp[177]-ppp[201]) tensor[1+x2,x1,1+x1+x1 x2,x1]+ppp[177] tensor[1+x2,x1,1+x1+x1 x2,1+x1]+(ppp[177]+ppp[184]-ppp[187]) tensor[1+x2,x1,1+x1+x1 x2,x2]-ppp[201] tensor[1+x2,x1,1+x1+x1 x2,1+x2]+(-2 ppp[177]-ppp[184]+ppp[187]) tensor[1+x2,x1,1+x1+x1 x2,1+x1+x1 x2]-ppp[177] tensor[1+x2,x2,x1,1+x1]+(-3 ppp[177]-2 ppp[184]+2 ppp[187]) tensor[1+x2,x2,x1,x2]+(2 ppp[177]+ppp[184]-ppp[187]) tensor[1+x2,x2,x1,1+x1+x1 x2]+3 ppp[177] tensor[1+x2,x2,1+x1,x1]-ppp[177] tensor[1+x2,x2,1+x1,1+x1]+(ppp[177]+ppp[178]) tensor[1+x2,x2,1+x1,x2]-ppp[178] tensor[1+x2,x2,1+x1,1+x1+x1 x2]+(-3 ppp[177]-2 ppp[184]+2 ppp[187]) tensor[1+x2,x2,x2,x1]+(ppp[177]+ppp[184]) tensor[1+x2,x2,x2,1+x1]+(-ppp[177]-ppp[178]-ppp[184]) tensor[1+x2,x2,x2,x2]+2 ppp[187] tensor[1+x2,x2,x2,1+x2]+(ppp[178]+3 ppp[192]+3 ppp[201]-ppp[209]+ppp[325]) tensor[1+x2,x2,x2,1+x1+x1 x2]+(-4 ppp[177]+2 ppp[178]-2 ppp[184]+2 ppp[187]) tensor[1+x2,x2,1+x2,x2]+(2 ppp[177]-ppp[178]+ppp[184]-ppp[187]) tensor[1+x2,x2,1+x2,1+x1+x1 x2]+(ppp[184]-ppp[187]) tensor[1+x2,x2,1+x1+x1 x2,x1]-ppp[184] tensor[1+x2,x2,1+x1+x1 x2,1+x1]+(ppp[184]+3 ppp[192]+3 ppp[201]-ppp[209]+ppp[325]) tensor[1+x2,x2,1+x1+x1 x2,x2]-ppp[187] tensor[1+x2,x2,1+x1+x1 x2,1+x2]+(-3 ppp[192]-3 ppp[201]+ppp[209]-ppp[325]) tensor[1+x2,x2,1+x1+x1 x2,1+x1+x1 x2]+ppp[211] tensor[1+x2,1+x2,x1,x1]+ppp[211] tensor[1+x2,1+x2,x1,1+x2]-ppp[209] tensor[1+x2,1+x2,x1,1+x1+x1 x2]-ppp[177] tensor[1+x2,1+x2,x2,1+x1]+(-3 ppp[177]-2 ppp[184]+2 ppp[187]) tensor[1+x2,1+x2,x2,x2]+(2 ppp[177]+ppp[184]-ppp[187]) tensor[1+x2,1+x2,x2,1+x1+x1 x2]+ppp[211] tensor[1+x2,1+x2,1+x2,x1]+ppp[211] tensor[1+x2,1+x2,1+x2,1+x2]-ppp[209] tensor[1+x2,1+x2,1+x2,1+x1+x1 x2]+(-ppp[177]-ppp[201]) tensor[1+x2,1+x2,1+x1+x1 x2,x1]+ppp[177] tensor[1+x2,1+x2,1+x1+x1 x2,1+x1]+(ppp[177]+ppp[184]-ppp[187]) tensor[1+x2,1+x2,1+x1+x1 x2,x2]-ppp[201] tensor[1+x2,1+x2,1+x1+x1 x2,1+x2]+(-2 ppp[177]-ppp[184]+ppp[187]) tensor[1+x2,1+x2,1+x1+x1 x2,1+x1+x1 x2]+(3 ppp[177]+ppp[192]) tensor[1+x2,1+x1+x1 x2,x1,x1]-ppp[177] tensor[1+x2,1+x1+x1 x2,x1,1+x1]+(3 ppp[177]+ppp[184]-ppp[187]) tensor[1+x2,1+x1+x1 x2,x1,x2]+ppp[192] tensor[1+x2,1+x1+x1 x2,x1,1+x2]+(-2 ppp[177]+ppp[178]-ppp[184]+ppp[187]) tensor[1+x2,1+x1+x1 x2,x1,1+x1+x1 x2]-3 ppp[177] tensor[1+x2,1+x1+x1 x2,1+x1,x1]+ppp[177] tensor[1+x2,1+x1+x1 x2,1+x1,1+x1]+(-ppp[177]-ppp[178]) tensor[1+x2,1+x1+x1 x2,1+x1,x2]+ppp[178] tensor[1+x2,1+x1+x1 x2,1+x1,1+x1+x1 x2]+(3 ppp[177]+ppp[184]-ppp[187]) tensor[1+x2,1+x1+x1 x2,x2,x1]+(-ppp[177]-ppp[184]) tensor[1+x2,1+x1+x1 x2,x2,1+x1]+(ppp[177]+ppp[178]+ppp[184]+3 ppp[192]+3 ppp[201]-ppp[209]+ppp[325]) tensor[1+x2,1+x1+x1 x2,x2,x2]-ppp[187] tensor[1+x2,1+x1+x1 x2,x2,1+x2]+(-ppp[178]-3 ppp[192]-3 ppp[201]+ppp[209]-ppp[325]) tensor[1+x2,1+x1+x1 x2,x2,1+x1+x1 x2]+ppp[192] tensor[1+x2,1+x1+x1 x2,1+x2,x1]+(2 ppp[177]-ppp[178]+ppp[184]-ppp[187]) tensor[1+x2,1+x1+x1 x2,1+x2,x2]+ppp[192] tensor[1+x2,1+x1+x1 x2,1+x2,1+x2]+(-2 ppp[177]+2 ppp[178]-ppp[184]+ppp[187]) tensor[1+x2,1+x1+x1 x2,1+x2,1+x1+x1 x2]+(-ppp[184]+ppp[187]) tensor[1+x2,1+x1+x1 x2,1+x1+x1 x2,x1]+ppp[184] tensor[1+x2,1+x1+x1 x2,1+x1+x1 x2,1+x1]+(-ppp[184]-3 ppp[192]-3 ppp[201]+ppp[209]-ppp[325]) tensor[1+x2,1+x1+x1 x2,1+x1+x1 x2,x2]+ppp[187] tensor[1+x2,1+x1+x1 x2,1+x1+x1 x2,1+x2]+(3 ppp[192]+3 ppp[201]-ppp[209]+ppp[325]) tensor[1+x2,1+x1+x1 x2,1+x1+x1 x2,1+x1+x1 x2]+(-ppp[177]-ppp[178]-ppp[184]) tensor[1+x1+x1 x2,x1,x1,x1]+(ppp[178]+3 ppp[192]+3 ppp[201]-ppp[209]+ppp[325]) tensor[1+x1+x1 x2,x1,x1,1+x1]+(2 ppp[177]-ppp[178]+ppp[184]-2 ppp[187]-3 ppp[192]-3 ppp[201]+ppp[209]-ppp[325]) tensor[1+x1+x1 x2,x1,x1,x2]+(3 ppp[192]+3 ppp[201]-ppp[209]+ppp[325]) tensor[1+x1+x1 x2,x1,x1,1+x2]+2 ppp[187] tensor[1+x1+x1 x2,x1,x1,1+x1+x1 x2]+(ppp[184]+3 ppp[192]+3 ppp[201]-ppp[209]+ppp[325]) tensor[1+x1+x1 x2,x1,1+x1,x1]+(-3 ppp[192]-3 ppp[201]+ppp[209]-ppp[325]) tensor[1+x1+x1 x2,x1,1+x1,1+x1]+(ppp[187]+3 ppp[192]+3 ppp[201]-ppp[209]+ppp[325]) tensor[1+x1+x1 x2,x1,1+x1,x2]-ppp[187] tensor[1+x1+x1 x2,x1,1+x1,1+x1+x1 x2]+(2 ppp[177]-ppp[178]+ppp[184]-2 ppp[187]-3 ppp[192]-3 ppp[201]+ppp[209]-ppp[325]) tensor[1+x1+x1 x2,x1,x2,x1]+(-2 ppp[177]+ppp[178]-ppp[184]+ppp[187]+3 ppp[192]+3 ppp[201]-ppp[209]+ppp[325]) tensor[1+x1+x1 x2,x1,x2,1+x1]+(3 ppp[177]-ppp[178]+ppp[184]-2 ppp[187]-3 ppp[192]-3 ppp[201]+ppp[209]-ppp[325]) tensor[1+x1+x1 x2,x1,x2,x2]+(2 ppp[177]+ppp[184]-ppp[187]) tensor[1+x1+x1 x2,x1,x2,1+x2]+ppp[187] tensor[1+x1+x1 x2,x1,x2,1+x1+x1 x2]+(3 ppp[192]+3 ppp[201]-ppp[209]+ppp[325]) tensor[1+x1+x1 x2,x1,1+x2,x1]+(ppp[184]-ppp[187]) tensor[1+x1+x1 x2,x1,1+x2,x2]+(3 ppp[192]+3 ppp[201]-ppp[209]+ppp[325]) tensor[1+x1+x1 x2,x1,1+x2,1+x2]+ppp[187] tensor[1+x1+x1 x2,x1,1+x2,1+x1+x1 x2]+(-4 ppp[177]+2 ppp[178]-2 ppp[184]+2 ppp[187]) tensor[1+x1+x1 x2,x1,1+x1+x1 x2,x1]+(2 ppp[177]-ppp[178]+ppp[184]-ppp[187]) tensor[1+x1+x1 x2,x1,1+x1+x1 x2,1+x1]+(-2 ppp[177]+ppp[178]-ppp[184]+ppp[187]) tensor[1+x1+x1 x2,x1,1+x1+x1 x2,x2]+(-2 ppp[177]+ppp[178]-ppp[184]+ppp[187]) tensor[1+x1+x1 x2,x1,1+x1+x1 x2,1+x2]+(ppp[177]+ppp[178]+ppp[184]+3 ppp[192]+3 ppp[201]-ppp[209]+ppp[325]) tensor[1+x1+x1 x2,1+x1,x1,x1]+(-ppp[178]-3 ppp[192]-3 ppp[201]+ppp[209]-ppp[325]) tensor[1+x1+x1 x2,1+x1,x1,1+x1]+(-2 ppp[177]+ppp[178]+ppp[187]+3 ppp[192]+3 ppp[201]-ppp[209]+ppp[325]) tensor[1+x1+x1 x2,1+x1,x1,x2]-ppp[187] tensor[1+x1+x1 x2,1+x1,x1,1+x1+x1 x2]+(-ppp[184]-3 ppp[192]-3 ppp[201]+ppp[209]-ppp[325]) tensor[1+x1+x1 x2,1+x1,1+x1,x1]+(3 ppp[192]+3 ppp[201]-ppp[209]+ppp[325]) tensor[1+x1+x1 x2,1+x1,1+x1,1+x1]+(-ppp[187]-3 ppp[192]-3 ppp[201]+ppp[209]-ppp[325]) tensor[1+x1+x1 x2,1+x1,1+x1,x2]+ppp[187] tensor[1+x1+x1 x2,1+x1,1+x1,1+x1+x1 x2]+(-2 ppp[177]+ppp[178]+ppp[187]+3 ppp[192]+3 ppp[201]-ppp[209]+ppp[325]) tensor[1+x1+x1 x2,1+x1,x2,x1]+(2 ppp[177]-2 ppp[178]+ppp[184]-ppp[187]-3 ppp[192]-3 ppp[201]+ppp[209]-ppp[325]) tensor[1+x1+x1 x2,1+x1,x2,1+x1]+(-2 ppp[177]+2 ppp[178]-ppp[184]+2 ppp[187]+4 ppp[192]+3 ppp[201]-ppp[209]+ppp[325]) tensor[1+x1+x1 x2,1+x1,x2,x2]-ppp[178] tensor[1+x1+x1 x2,1+x1,x2,1+x2]+(-ppp[187]-ppp[192]) tensor[1+x1+x1 x2,1+x1,x2,1+x1+x1 x2]+(2 ppp[177]-ppp[178]+ppp[184]-ppp[187]) tensor[1+x1+x1 x2,1+x1,1+x1+x1 x2,x1]+(-2 ppp[177]+2 ppp[178]-ppp[184]+ppp[187]) tensor[1+x1+x1 x2,1+x1,1+x1+x1 x2,1+x1]+(2 ppp[177]-2 ppp[178]+ppp[184]-ppp[187]-ppp[192]) tensor[1+x1+x1 x2,1+x1,1+x1+x1 x2,x2]+ppp[178] tensor[1+x1+x1 x2,1+x1,1+x1+x1 x2,1+x2]+ppp[192] tensor[1+x1+x1 x2,1+x1,1+x1+x1 x2,1+x1+x1 x2]+(2 ppp[177]-ppp[178]+ppp[184]-2 ppp[187]-3 ppp[192]-3 ppp[201]+ppp[209]-ppp[325]) tensor[1+x1+x1 x2,x2,x1,x1]+(-2 ppp[177]+ppp[178]-ppp[184]+ppp[187]+3 ppp[192]+3 ppp[201]-ppp[209]+ppp[325]) tensor[1+x1+x1 x2,x2,x1,1+x1]+(3 ppp[177]-ppp[178]+ppp[184]-2 ppp[187]-3 ppp[192]-3 ppp[201]+ppp[209]-ppp[325]) tensor[1+x1+x1 x2,x2,x1,x2]+(2 ppp[177]+ppp[184]-ppp[187]) tensor[1+x1+x1 x2,x2,x1,1+x2]+ppp[187] tensor[1+x1+x1 x2,x2,x1,1+x1+x1 x2]+(-ppp[177]+ppp[187]+3 ppp[192]+3 ppp[201]-ppp[209]+ppp[325]) tensor[1+x1+x1 x2,x2,1+x1,x1]+(2 ppp[177]+ppp[184]-ppp[187]-3 ppp[192]-3 ppp[201]+ppp[209]-ppp[325]) tensor[1+x1+x1 x2,x2,1+x1,1+x1]+(-2 ppp[177]-ppp[184]+2 ppp[187]+3 ppp[192]+2 ppp[201]-ppp[209]+ppp[325]) tensor[1+x1+x1 x2,x2,1+x1,x2]+(-ppp[187]+ppp[201]) tensor[1+x1+x1 x2,x2,1+x1,1+x1+x1 x2]+(3 ppp[177]-ppp[178]+ppp[184]-2 ppp[187]-3 ppp[192]-3 ppp[201]+ppp[209]-ppp[325]) tensor[1+x1+x1 x2,x2,x2,x1]+(-4 ppp[177]+2 ppp[178]-2 ppp[184]+2 ppp[187]+3 ppp[192]+3 ppp[201]-2 ppp[209]+ppp[325]) tensor[1+x1+x1 x2,x2,x2,1+x1]+(4 ppp[177]-2 ppp[178]+2 ppp[184]-3 ppp[187]-4 ppp[192]-2 ppp[201]+2 ppp[209]-ppp[211]-ppp[325]) tensor[1+x1+x1 x2,x2,x2,x2]+(ppp[178]-ppp[209]) tensor[1+x1+x1 x2,x2,x2,1+x2]+(ppp[187]+ppp[192]-ppp[201]+ppp[211]) tensor[1+x1+x1 x2,x2,x2,1+x1+x1 x2]+(2 ppp[177]+ppp[184]-ppp[187]) tensor[1+x1+x1 x2,x2,1+x2,x1]+(-ppp[177]-ppp[201]) tensor[1+x1+x1 x2,x2,1+x2,x2]+(2 ppp[177]+ppp[184]-ppp[187]) tensor[1+x1+x1 x2,x2,1+x2,1+x2]+ppp[201] tensor[1+x1+x1 x2,x2,1+x2,1+x1+x1 x2]+(-2 ppp[177]+ppp[178]-ppp[184]+ppp[187]) tensor[1+x1+x1 x2,x2,1+x1+x1 x2,x1]+(2 ppp[177]-2 ppp[178]+ppp[184]-ppp[187]+ppp[209]) tensor[1+x1+x1 x2,x2,1+x1+x1 x2,1+x1]+(-2 ppp[177]+2 ppp[178]-ppp[184]+ppp[187]+ppp[192]-ppp[209]+ppp[211]) tensor[1+x1+x1 x2,x2,1+x1+x1 x2,x2]+(-ppp[178]+ppp[209]) tensor[1+x1+x1 x2,x2,1+x1+x1 x2,1+x2]+(-ppp[192]-ppp[211]) tensor[1+x1+x1 x2,x2,1+x1+x1 x2,1+x1+x1 x2]+(3 ppp[192]+3 ppp[201]-ppp[209]+ppp[325]) tensor[1+x1+x1 x2,1+x2,x1,x1]+(ppp[184]-ppp[187]) tensor[1+x1+x1 x2,1+x2,x1,x2]+(3 ppp[192]+3 ppp[201]-ppp[209]+ppp[325]) tensor[1+x1+x1 x2,1+x2,x1,1+x2]+ppp[187] tensor[1+x1+x1 x2,1+x2,x1,1+x1+x1 x2]+(ppp[184]-ppp[187]) tensor[1+x1+x1 x2,1+x2,x2,x1]-ppp[178] tensor[1+x1+x1 x2,1+x2,x2,1+x1]+(ppp[177]+ppp[178]+ppp[192]) tensor[1+x1+x1 x2,1+x2,x2,x2]+(2 ppp[177]-ppp[178]+ppp[184]-ppp[187]) tensor[1+x1+x1 x2,1+x2,x2,1+x2]-ppp[192] tensor[1+x1+x1 x2,1+x2,x2,1+x1+x1 x2]+(3 ppp[192]+3 ppp[201]-ppp[209]+ppp[325]) tensor[1+x1+x1 x2,1+x2,1+x2,x1]+(ppp[184]-ppp[187]) tensor[1+x1+x1 x2,1+x2,1+x2,x2]+(3 ppp[192]+3 ppp[201]-ppp[209]+ppp[325]) tensor[1+x1+x1 x2,1+x2,1+x2,1+x2]+ppp[187] tensor[1+x1+x1 x2,1+x2,1+x2,1+x1+x1 x2]+(-2 ppp[177]+ppp[178]-ppp[184]+ppp[187]) tensor[1+x1+x1 x2,1+x2,1+x1+x1 x2,x1]+ppp[178] tensor[1+x1+x1 x2,1+x2,1+x1+x1 x2,1+x1]+(-ppp[178]-ppp[192]) tensor[1+x1+x1 x2,1+x2,1+x1+x1 x2,x2]+(-2 ppp[177]+2 ppp[178]-ppp[184]+ppp[187]) tensor[1+x1+x1 x2,1+x2,1+x1+x1 x2,1+x2]+ppp[192] tensor[1+x1+x1 x2,1+x2,1+x1+x1 x2,1+x1+x1 x2]+(-3 ppp[177]-2 ppp[184]+2 ppp[187]) tensor[1+x1+x1 x2,1+x1+x1 x2,x1,x1]+(2 ppp[177]+ppp[184]-ppp[187]) tensor[1+x1+x1 x2,1+x1+x1 x2,x1,1+x1]+(-ppp[177]-ppp[184]+ppp[187]) tensor[1+x1+x1 x2,1+x1+x1 x2,x1,x2]+(-2 ppp[177]-ppp[184]+ppp[187]) tensor[1+x1+x1 x2,1+x1+x1 x2,x1,1+x2]+(ppp[177]+ppp[184]-ppp[187]) tensor[1+x1+x1 x2,1+x1+x1 x2,1+x1,x1]+(-2 ppp[177]-ppp[184]+ppp[187]) tensor[1+x1+x1 x2,1+x1+x1 x2,1+x1,1+x1]+(2 ppp[177]+ppp[184]-ppp[187]+ppp[201]) tensor[1+x1+x1 x2,1+x1+x1 x2,1+x1,x2]-ppp[201] tensor[1+x1+x1 x2,1+x1+x1 x2,1+x1,1+x1+x1 x2]+(-ppp[177]-ppp[184]+ppp[187]) tensor[1+x1+x1 x2,1+x1+x1 x2,x2,x1]+(2 ppp[177]+ppp[184]-ppp[187]+ppp[209]) tensor[1+x1+x1 x2,1+x1+x1 x2,x2,1+x1]+(-2 ppp[177]-ppp[184]+ppp[187]-ppp[201]-ppp[209]+ppp[211]) tensor[1+x1+x1 x2,1+x1+x1 x2,x2,x2]+ppp[209] tensor[1+x1+x1 x2,1+x1+x1 x2,x2,1+x2]+(ppp[201]-ppp[211]) tensor[1+x1+x1 x2,1+x1+x1 x2,x2,1+x1+x1 x2]+(-2 ppp[177]-ppp[184]+ppp[187]) tensor[1+x1+x1 x2,1+x1+x1 x2,1+x2,x1]+(ppp[177]+ppp[201]) tensor[1+x1+x1 x2,1+x1+x1 x2,1+x2,x2]+(-2 ppp[177]-ppp[184]+ppp[187]) tensor[1+x1+x1 x2,1+x1+x1 x2,1+x2,1+x2]-ppp[201] tensor[1+x1+x1 x2,1+x1+x1 x2,1+x2,1+x1+x1 x2]-ppp[209] tensor[1+x1+x1 x2,1+x1+x1 x2,1+x1+x1 x2,1+x1]+(ppp[209]-ppp[211]) tensor[1+x1+x1 x2,1+x1+x1 x2,1+x1+x1 x2,x2]-ppp[209] tensor[1+x1+x1 x2,1+x1+x1 x2,1+x1+x1 x2,1+x2]+ppp[211] tensor[1+x1+x1 x2,1+x1+x1 x2,1+x1+x1 x2,1+x1+x1 x2];

(*coproduct*)
a2FuncCopr[x1_,x2_]:=-tensor[cb3[x1],x2]-tensor[cb3[x1],(x1 x2)/(1+x1)]-tensor[cb3[x2],x1]-tensor[cb3[x2],x1 (1+x2)]+tensor[cb3[(x1 x2)/(1+x1)],x1]+tensor[cb3[(x1 x2)/(1+x1)],(1+x1+x1 x2)/x2]+tensor[cb3[x1 (1+x2)],x2]-tensor[cb3[x1 (1+x2)],(1+x1+x1 x2)/x2]+tensor[cb3[(1+x1+x1 x2)/x2],(x1 x2)/(1+x1)]+tensor[cb3[(1+x1+x1 x2)/x2],x1 (1+x2)]-(wedge[cb2[x2],cb2[x1]]+wedge[cb2[(x1 x2)/(1+x1)],cb2[x1]]-wedge[cb2[(x1 x2)/(1+x1)],cb2[x2]]+wedge[cb2[x1 (1+x2)],cb2[x1]]-wedge[cb2[x1 (1+x2)],cb2[x2]]+wedge[cb2[x1 (1+x2)],cb2[(x1 x2)/(1+x1)]]);


(* a3 *)

(*coproduct*)
a3FuncCopr[x1_,x2_,x3_]:=1/2 tensor[cb3[x1],x2]+1/2 tensor[cb3[x1],(x1 x2)/(1+x1)]-1/2 tensor[cb3[x1],x2 (1+x3)]-1/2 tensor[cb3[x1],(x1 x2 (1+x3))/(1+x1)]+1/2 tensor[cb3[x2],x1]+1/2 tensor[cb3[x2],x1 (1+x2)]+1/2 tensor[cb3[x2],x3]+1/2 tensor[cb3[x2],(x2 x3)/(1+x2)]-1/2 tensor[cb3[(x1 x2)/(1+x1)],x1]-1/2 tensor[cb3[(x1 x2)/(1+x1)],(1+x1+x1 x2)/x2]-1/2 tensor[cb3[(x1 x2)/(1+x1)],x3]-1/2 tensor[cb3[(x1 x2)/(1+x1)],(x1 x2 x3)/(1+x1+x1 x2)]-1/2 tensor[cb3[x1 (1+x2)],x2]+1/2 tensor[cb3[x1 (1+x2)],(1+x1+x1 x2)/x2]+1/2 tensor[cb3[x1 (1+x2)],(x2 x3)/(1+x2)]+1/2 tensor[cb3[x1 (1+x2)],(x1 x2 x3)/(1+x1+x1 x2)]-1/2 tensor[cb3[x2/(1+x1+x1 x2)],((1+x1) x3)/(1+x1+x1 x2+x1 x2 x3)]-1/2 tensor[cb3[x2/(1+x1+x1 x2)],(x2 x3)/((1+x2) (1+x1+x1 x2+x1 x2 x3))]-1/2 tensor[cb3[(1+x1+x1 x2)/x2],(x1 x2)/(1+x1)]-1/2 tensor[cb3[(1+x1+x1 x2)/x2],x1 (1+x2)]+1/2 tensor[cb3[x3],x2]-1/2 tensor[cb3[x3],(x1 x2)/(1+x1)]+1/2 tensor[cb3[x3],x2 (1+x3)]-1/2 tensor[cb3[x3],(x1 x2 (1+x3))/(1+x1)]-1/2 tensor[cb3[(x2 x3)/(1+x2)],x2]+1/2 tensor[cb3[(x2 x3)/(1+x2)],x1 (1+x2)]+1/2 tensor[cb3[(x2 x3)/(1+x2)],x1 (1+x2+x2 x3)]-1/2 tensor[cb3[(x2 x3)/(1+x2)],(1+x2+x2 x3)/x3]+1/2 tensor[cb3[(x1 x2 x3)/(1+x1+x1 x2)],(x1 x2)/(1+x1)]-1/2 tensor[cb3[(x1 x2 x3)/(1+x1+x1 x2)],x1 (1+x2)]+1/2 tensor[cb3[(x1 x2 x3)/(1+x1+x1 x2)],(1+x1+x1 x2+x1 x2 x3)/((1+x1) x3)]-1/2 tensor[cb3[(x1 x2 x3)/(1+x1+x1 x2)],((1+x2) (1+x1+x1 x2+x1 x2 x3))/(x2 x3)]-1/2 tensor[cb3[x2 (1+x3)],x1]-1/2 tensor[cb3[x2 (1+x3)],x3]-1/2 tensor[cb3[x2 (1+x3)],x1 (1+x2+x2 x3)]+1/2 tensor[cb3[x2 (1+x3)],(1+x2+x2 x3)/x3]+1/2 tensor[cb3[(x1 x2 (1+x3))/(1+x1)],x1]+1/2 tensor[cb3[(x1 x2 (1+x3))/(1+x1)],x3]-1/2 tensor[cb3[(x1 x2 (1+x3))/(1+x1)],(1+x1+x1 x2+x1 x2 x3)/((1+x1) x3)]+1/2 tensor[cb3[(x1 x2 (1+x3))/(1+x1)],(1+x1+x1 x2+x1 x2 x3)/(x2 (1+x3))]-1/2 tensor[cb3[x1 (1+x2+x2 x3)],(x2 x3)/(1+x2)]+1/2 tensor[cb3[x1 (1+x2+x2 x3)],x2 (1+x3)]+1/2 tensor[cb3[x1 (1+x2+x2 x3)],((1+x2) (1+x1+x1 x2+x1 x2 x3))/(x2 x3)]-1/2 tensor[cb3[x1 (1+x2+x2 x3)],(1+x1+x1 x2+x1 x2 x3)/(x2 (1+x3))]-1/2 tensor[cb3[(1+x2+x2 x3)/x3],(x2 x3)/(1+x2)]-1/2 tensor[cb3[(1+x2+x2 x3)/x3],x2 (1+x3)]+1/2 tensor[cb3[(1+x2+x2 x3)/x3],(x2 x3)/((1+x2) (1+x1+x1 x2+x1 x2 x3))]+1/2 tensor[cb3[(1+x2+x2 x3)/x3],(x2 (1+x3))/(1+x1+x1 x2+x1 x2 x3)]-1/2 tensor[cb3[((1+x1) x3)/(1+x1+x1 x2+x1 x2 x3)],x2/(1+x1+x1 x2)]-1/2 tensor[cb3[((1+x1) x3)/(1+x1+x1 x2+x1 x2 x3)],(x2 (1+x3))/(1+x1+x1 x2+x1 x2 x3)]+1/2 tensor[cb3[(x2 x3)/((1+x2) (1+x1+x1 x2+x1 x2 x3))],x2/(1+x1+x1 x2)]+1/2 tensor[cb3[(x2 x3)/((1+x2) (1+x1+x1 x2+x1 x2 x3))],(1+x2+x2 x3)/x3]-1/2 tensor[cb3[(x2 (1+x3))/(1+x1+x1 x2+x1 x2 x3)],(1+x2+x2 x3)/x3]+1/2 tensor[cb3[(x2 (1+x3))/(1+x1+x1 x2+x1 x2 x3)],((1+x1) x3)/(1+x1+x1 x2+x1 x2 x3)]+1/2 tensor[cb3[(1+x1+x1 x2+x1 x2 x3)/((1+x1) x3)],(x1 x2 x3)/(1+x1+x1 x2)]+1/2 tensor[cb3[(1+x1+x1 x2+x1 x2 x3)/((1+x1) x3)],(x1 x2 (1+x3))/(1+x1)]-1/2 tensor[cb3[((1+x2) (1+x1+x1 x2+x1 x2 x3))/(x2 x3)],(x1 x2 x3)/(1+x1+x1 x2)]-1/2 tensor[cb3[((1+x2) (1+x1+x1 x2+x1 x2 x3))/(x2 x3)],x1 (1+x2+x2 x3)]+1/2 tensor[cb3[(1+x1+x1 x2+x1 x2 x3)/(x2 (1+x3))],(x1 x2 (1+x3))/(1+x1)]+1/2 tensor[cb3[(1+x1+x1 x2+x1 x2 x3)/(x2 (1+x3))],x1 (1+x2+x2 x3)]-(wedge[cb2[x1],cb2[x3]]+wedge[cb2[x2/(1+x1+x1 x2)],cb2[(x1 x2 x3)/(1+x1+x1 x2)]]-wedge[cb2[x1 (1+x2+x2 x3)],cb2[x3/(1+x2+x2 x3)]]);
